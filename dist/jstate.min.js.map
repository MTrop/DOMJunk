{"version":3,"sources":["STDIN"],"sourcesContent":["/****************************************************************************\r\n * JState by Matt Tropiano (C) 2022\r\n * Requires ECMAScript 6\r\n * Licensed for use under the MIT License\r\n * @license\r\n ****************************************************************************/\r\n(function(CTX){\r\n\t\r\n\t/********************************************************************/\r\n\t/** Test Browser Capabilities                                      **/\r\n\t/********************************************************************/\r\n\r\n\tif (!CTX.Element) {\r\n\t\tconsole.error(\"Missing required type: Element.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: document.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelector) {\r\n\t\tconsole.error(\"Missing required function: document.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelector) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Utilities                                                      **/\r\n\t/********************************************************************/\r\n\r\n\tconst isType = function(obj, type) {\r\n\t\treturn Object.prototype.toString.call(obj) === '[object '+type+']';\r\n\t};\r\n\r\n\tconst isUndefined = function(obj) {\r\n\t\treturn (typeof obj) === 'undefined';\r\n\t};\r\n\r\n\tconst isNull = function(obj) {\r\n\t\treturn obj === null;\r\n\t};\r\n\r\n\tconst isBoolean = function(obj) {\r\n\t\treturn isType(obj, 'Boolean');\r\n\t};\r\n\r\n\tconst isNumber = function(obj) {\r\n\t\treturn isType(obj, 'Number');\r\n\t};\r\n\r\n\tconst isString = function(obj) {\r\n\t\treturn isType(obj, 'String');\r\n\t};\r\n\r\n\tconst isArray = function(obj) {\r\n\t\treturn isType(obj, 'Array');\r\n\t};\r\n\r\n\tconst isFunction = function(obj) {\r\n\t\treturn isType(obj, 'Function');\r\n\t};\r\n\r\n\tconst isObject = function(obj) {\r\n\t\treturn isType(obj, 'Object');\r\n\t};\r\n\r\n\tconst isBlank = function(obj) {\r\n\t\treturn (\r\n\t\t\t\tisUndefined(obj)\r\n\t\t\t|| isNull(obj) \r\n\t\t\t|| (isArray(obj) && obj.length === 0) \r\n\t\t\t|| (isNumber(obj) && isNaN(obj)) \r\n\t\t\t|| (isString(obj) && obj.trim().length === 0)\r\n\t\t\t|| obj === 0 \r\n\t\t);\r\n\t};\r\n\t\r\n\tconst each = function(list, func) {\r\n\t\tif (isUndefined(list) || isNull(list)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (isBoolean(list) || isNumber(list) || isString(list)) {\r\n\t\t\tfunc(list, null, 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let x in list) if (list.hasOwnProperty(x)) {\r\n\t\t\t\tif (func(list[x], x, list.length))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Matches() polyfill.\r\n\tconst elemMatches = (\r\n\t\tElement.prototype.matches ||\r\n\t\tElement.prototype.matchesSelector || \r\n\t\tElement.prototype.msMatchesSelector\r\n\t);\r\n\t\r\n\tconst matches = function(elem, selector){\r\n\t\treturn elemMatches.call(elem, selector);\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Classes                                                        **/\r\n\t/********************************************************************/\r\n\r\n\t// Private state applier timeout setup.\r\n\t// Must be apply()'ed to set \"this\" as the calling AppState object.\r\n\tconst _STATETIMEOUTAPPLY = function() {\r\n\t\tif (!(this instanceof AppState))\r\n\t\t\treturn;\r\n\r\n\t\tif (this.applierTimeout != null) {\r\n\t\t\tclearTimeout(this.applierTimeout);\r\n\t\t\tthis.applierTimeout = null;\r\n\t\t}\r\n\r\n\t\tthis.applierTimeout = setTimeout(() => {\r\n\t\t\teach(this.nextStateChanges, (value, key) => {\r\n\t\t\t\tif (this.stateApplierFunctionMap[key]) {\r\n\t\t\t\t\tthis.stateApplierFunctionMap[key](value, this.state[key]);\r\n\t\t\t\t\tthis.state[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.nextStateChanges = {};\r\n\t\t}, 0);\r\n\t};\r\n\r\n\t// Event name converter.\r\n\tconst _EVENTNAME = (name) => ('on' + name.toLowerCase());\r\n\r\n\t// Event attacher function.\r\n\tconst _ATTACH = (eventName, eventfunc) => ((element) => {element[eventName] = eventfunc;});\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * AppState class - main driver for state listening.\r\n\t */\r\n\tclass AppState {\r\n\r\n\t\t/**\r\n\t\t * Creates the app state with a function map.\r\n\t\t * @param {Object} funcMap the mapping of state member to handler function.\r\n\t\t * @see addHandler\r\n\t\t */\r\n\t\tconstructor(funcMap) {\r\n\r\n\t\t\tif (!isObject(funcMap)) {\r\n\t\t\t\tthrow new Error(\"Expected object for state applier.\");\r\n\t\t\t}\r\n\r\n\t\t\t// Handler functions.\r\n\t\t\tthis.stateApplierFunctionMap = {};\r\n\t\t\tthis.changeVerifierMap = {};\r\n\r\n\t\t\t// State and state processing.\r\n\t\t\tthis.state = {};\r\n\t\t\tthis.nextStateChanges = {};\r\n\t\t\tthis.applierTimeout = null;\r\n\r\n\t\t\t// Main bread and butter.\r\n\t\t\teach(funcMap, (f, n) => {\r\n\t\t\t\tthis.addHandler(n, f);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds a state handler to this class.\r\n\t\t * @param {string} name the state member name to bind to.\r\n\t\t * @param {Function} func the handler function.\r\n\t\t * @returns {AppState} this AppState object.\r\n\t\t */\r\n\t\taddHandler(name, func) {\r\n\t\t\tif (isFunction(func)) {\r\n\t\t\t\tthis.stateApplierFunctionMap[name] = func;\r\n\t\t\t}\r\n\t\t\telse if (isNull(func) || isUndefined(func)) {\r\n\t\t\t\tthis.removeHandler(name);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes a state handler from this class.\r\n\t\t * @param {string} name the state member name to bind to.\r\n\t\t * @returns {AppState} this AppState object.\r\n\t\t */\r\n\t\tremoveHandler(name) {\r\n\t\t\tdelete this.stateApplierFunctionMap[name];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets one or more fields on the state, but doesn't attempt to apply\r\n\t\t * to the state functions.\r\n\t\t * This will merge the incoming object into the current state.\r\n\t\t * @param {Object} nextState the new state changes.\r\n\t\t * @returns {AppState} this AppState object.\r\n\t\t */\r\n\t\tsetState(nextState) {\r\n\t\t\tif (!isObject(nextState)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\teach(nextState, (value, key) => {\r\n\t\t\t\tthis.state[key] = value;\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Applies a state object to this state manager.\r\n\t\t * This will merge the incoming object into the current state, and\r\n\t\t * send the changed contents to the state applier function map for applying.\r\n\t\t * \r\n\t\t * This function can be called many times in one event - all accumulated changes\r\n\t\t * get applied once this event yields.\r\n\t\t * @param {Object} nextState the new state changes.\r\n\t\t * @returns {AppState} this AppState object.\r\n\t\t */\r\n\t\tapplyState(nextState) {\r\n\t\t\tif (!isObject(nextState)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\teach(nextState, (value, key) => {\r\n\t\t\t\tif (this.state[key] !== value) {\r\n\t\t\t\t\tthis.nextStateChanges[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Apply after event yield - many calls during this event may accumulate changes.\r\n\t\t\t_STATETIMEOUTAPPLY.apply(this);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Forces a refresh on a state member as though it changed.\r\n\t\t * Useful for \"deep\" changes on state members like objects and arrays that\r\n\t\t * may not be detected at the member level or did not qualify via verification.\r\n\t\t * \r\n\t\t * This function can be called many times in one event - all accumulated changes\r\n\t\t * get applied once this event yields.\r\n\t\t * @param {String...} arguments a series of member names.\r\n\t\t * @returns {AppState} this AppState object.\r\n\t\t */\r\n\t\ttouchState(/* memberName... */) {\r\n\t\t\teach(arguments, (memberName) => {\r\n\t\t\t\tif (this.stateApplierFunctionMap[memberName]) {\r\n\t\t\t\t\tthis.nextStateChanges[memberName] = this.state[memberName];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Apply after event yield - many calls during this event may accumulate changes.\r\n\t\t\t_STATETIMEOUTAPPLY.apply(this);\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Binds an event handler to a state applier.\r\n\t\t * This just facilitates some shorthanding.\r\n\t\t * @param {string} eventName the element event name (e.g. \"click\", \"mouseover\", etc.).\r\n\t\t * @param {*} selection If String, use this as a selector for elements. Else if Array of elements, the elements to bind to.\r\n\t\t * @param {Object} nextState if function, the function must return an object to pass to applyState. First parameter is event object, Second is the current state object.\r\n\t\t * \t\tIf object, it is the object to directly pass to applyState.\r\n\t\t * @returns {AppState} this AppState object.\r\n\t\t */\r\n\t\tbindStateEvent(eventName, selection, nextState) {\r\n\t\t\tconst self = this;\r\n\t\t\t\r\n\t\t\teventName = _EVENTNAME(eventName);\r\n\r\n\t\t\tconst group = isString(selection)\r\n\t\t\t\t? document.querySelectorAll(selection)\r\n\t\t\t\t: selection;\r\n\r\n\t\t\teach(group, _ATTACH(eventName, function(event) {\r\n\t\t\t\tif (isFunction(nextState)) {\r\n\t\t\t\t\tself.applyState(nextState(event, self.state));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.applyState(nextState);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\t/********************************************************************/\r\n\r\n\t// Top-level object.\r\n\tconst JState = new function(){};\r\n\r\n\t/**\r\n\t * Creates a new application state driver.\r\n\t * @param {Object} stateFuncMap a map of state member name to Function.\r\n\t * \t\tThe function is called if that state's member changes its value.\r\n\t * \t\tFirst function parameter is the new value.\r\n\t * \t\tSecond function parameter is the previous value.\r\n\t * @returns a new AppState object.\r\n\t */\r\n\tJState.createAppState = function(stateFuncMap) {\r\n\t\treturn new AppState(stateFuncMap);\r\n\t};\r\n\r\n\t/**\r\n\t * Creates an object that reflects the ACTIVE input from changes to a form.\r\n\t * If a tracked field in the provided Form element changes, the corresponding member in\r\n\t * the returned object is changed, and the optional change function is called with the name of the member changed.\r\n\t * @param {Element} formElements the Form element to bind.\r\n\t * @param {object} targetObject (OPTIONAL) the object reference to bind to. If undefined or null, a new object is returned.\r\n\t * @param {Function} changeFunc (OPTIONAL) the function to call on a field change. First parameter is the member name changed.\r\n\t * @returns the object reference that will contain the object state.\r\n\t */\r\n\tJState.bindFormState = function(formElements, targetObject, changeFunc) {\r\n\t\t\r\n\t\tif (isBlank(formElements)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state = targetObject || {};\r\n\t\tconst changeFunction = changeFunc;\r\n\r\n\t\tconst CHECKBOXEVENT = (event) => {\r\n\t\t\tconst element = event.srcElement;\r\n\t\t\tconst memberName = element.getAttribute('name');\r\n\t\t\tif (!memberName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (element.checked) {\r\n\t\t\t\tstate[memberName] = element.value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdelete state[memberName];\r\n\t\t\t}\r\n\t\t\tchangeFunction && changeFunction(memberName);\r\n\t\t};\r\n\r\n\t\tconst TEXTEVENT = (event) => {\r\n\t\t\tconst element = event.srcElement;\r\n\t\t\tconst memberName = element.getAttribute('name');\r\n\t\t\tif (!memberName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstate[memberName] = element.value;\r\n\t\t\tchangeFunction && changeFunction(memberName);\r\n\t\t};\r\n\r\n\t\tconst SELECTEVENT = (event) => {\r\n\t\t\tconst element = event.srcElement;\r\n\t\t\tconst memberName = element.getAttribute('name');\r\n\t\t\tif (!memberName) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst multi = !!element.getAttribute('multiple');\r\n\r\n\t\t\tif (multi) {\r\n\t\t\t\tstate[memberName] = [ ...element.options ].filter((option) => option.selected).map((option) => option.value);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstate[memberName] = element.value;\r\n\t\t\t}\r\n\t\t\tchangeFunction && changeFunction(memberName);\r\n\t\t};\r\n\r\n\t\tconst TEXTCHANGE0 =\t_ATTACH('onchange', TEXTEVENT);\r\n\t\tconst TEXTCHANGE1 =\t_ATTACH('onkeyup',  TEXTEVENT);\r\n\t\tconst CHECKBOXCHANGE = _ATTACH('onchange', CHECKBOXEVENT);\r\n\t\tconst SELECTCHANGE = _ATTACH('onchange', SELECTEVENT);\r\n\r\n\t\tfor (let i = 0; i < formElements.length; i++) {\r\n\t\t\tconst formElement = formElements[i];\r\n\t\t\tif (formElement.tagName === 'INPUT') {\r\n\t\t\t\tif (formElement.type === 'checkbox' || formElement.type === 'radio') {\r\n\t\t\t\t\tCHECKBOXCHANGE(formElement);\r\n\t\t\t\t}\r\n\t\t\t\telse if (formElement.type !== 'button' && formElement.type !== 'submit') {\r\n\t\t\t\t\tTEXTCHANGE0(formElement);\r\n\t\t\t\t\tTEXTCHANGE1(formElement);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (formElement.tagName === 'TEXTAREA') {\r\n\t\t\t\tTEXTCHANGE0(formElement);\r\n\t\t\t\tTEXTCHANGE1(formElement);\r\n\t\t\t}\r\n\t\t\telse if (formElement.tagName === 'SELECT') {\r\n\t\t\t\tSELECTCHANGE(formElement);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn state;\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tlet old$JSAssignment = CTX.$JS;\r\n\r\n\t/**\r\n\t * Restores the previous assigment of '$JS' at load.\r\n\t */\r\n\tJState.noConflict = function() {\r\n\t\tCTX.$JS\t = old$JSAssignment;\r\n\t};\r\n\t\r\n\tCTX.JState = JState;\r\n\tCTX.$JS    = JState;\r\n\r\n})(this);\r\n"],"names":["CTX","Element","console","error","document","querySelectorAll","querySelector","prototype","isUndefined","obj","isNull","isNumber","isType","isString","isFunction","isObject","isBlank","length","isNaN","trim","each","list","func","let","x","hasOwnProperty","type","Object","toString","call","matches","matchesSelector","msMatchesSelector","_STATETIMEOUTAPPLY","this","AppState","applierTimeout","clearTimeout","setTimeout","nextStateChanges","value","key","stateApplierFunctionMap","state","_EVENTNAME","name","toLowerCase","_ATTACH","eventName","eventfunc","element","constructor","funcMap","Error","changeVerifierMap","f","n","addHandler","removeHandler","setState","nextState","applyState","apply","touchState","arguments","memberName","bindStateEvent","selection","self","group","event","JState","createAppState","stateFuncMap","bindFormState","formElements","targetObject","changeFunc","changeFunction","TEXTEVENT","srcElement","getAttribute","TEXTCHANGE0","TEXTCHANGE1","CHECKBOXCHANGE","checked","SELECTCHANGE","multi","options","filter","option","selected","map","i","formElement","tagName","old$JSAssignment","$JS","noConflict"],"mappings":";;;;;8EAMA;CAAA,SAAUA,GAMT,GAAI,CAACA,EAAIC,QAER,OADAC,QAAQC,MAAM,iCAAiC,EAGhD,GAAI,CAACH,EAAII,SAASC,iBAEjB,OADAH,QAAQC,MAAM,uDAAuD,EAGtE,GAAI,CAACH,EAAII,SAASE,cAEjB,OADAJ,QAAQC,MAAM,oDAAoD,EAGnE,GAAI,CAACH,EAAIC,QAAQM,UAAUF,iBAE1B,OADAH,QAAQC,MAAM,sDAAsD,EAGrE,GAAI,CAACH,EAAIC,QAAQM,UAAUD,cAE1B,OADAJ,QAAQC,MAAM,mDAAmD,EAa9C,SAAdK,EAAuBC,GAC5B,OAAwB,KAAA,IAATA,CAChB,CAEe,SAATC,EAAkBD,GACvB,OAAe,OAARA,CACR,CAMiB,SAAXE,EAAoBF,GACzB,OAAOG,EAAOH,EAAK,QAAQ,CAC5B,CAEiB,SAAXI,EAAoBJ,GACzB,OAAOG,EAAOH,EAAK,QAAQ,CAC5B,CAMmB,SAAbK,EAAsBL,GAC3B,OAAOG,EAAOH,EAAK,UAAU,CAC9B,CAEiB,SAAXM,EAAoBN,GACzB,OAAOG,EAAOH,EAAK,QAAQ,CAC5B,CAEgB,SAAVO,EAAmBP,GACxB,OACED,EAAYC,CAAG,GACbC,EAAOD,CAAG,IAfUA,EAgBXA,EAfNG,EAAOH,EAAK,OAAO,GAeU,IAAfA,EAAIQ,SACpBN,EAASF,CAAG,GAAKS,MAAMT,CAAG,GAC1BI,EAASJ,CAAG,GAA2B,IAAtBA,EAAIU,KAAK,EAAEF,QACrB,IAARR,EAnBW,IAASA,CAqBzB,CAEa,SAAPW,EAAgBC,EAAMC,GAC3B,GAAId,CAAAA,EAAYa,CAAI,GAAKX,CAAAA,EAAOW,CAAI,EAG/B,GAvCqBZ,EAuCPY,EAtCZT,EAAOH,EAAK,SAAS,GAsCAE,EAASU,CAAI,GAAKR,EAASQ,CAAI,EAC1DC,EAAKD,EAAM,KAAM,CAAC,OAGlB,IAAKE,IAAIC,KAAKH,EAAM,GAAIA,EAAKI,eAAeD,CAAC,GACxCF,EAAKD,EAAKG,GAAIA,EAAGH,EAAKJ,MAAM,EAC/B,MA7Cc,IAASR,CAgD3B,CA5DA,MAAMG,EAAS,SAASH,EAAKiB,GAC5B,OAAOC,OAAOpB,UAAUqB,SAASC,KAAKpB,CAAG,IAAM,WAAWiB,EAAK,GAChE,EA8DCzB,QAAQM,UAAUuB,SAClB7B,QAAQM,UAAUwB,iBAClB9B,QAAQM,UAAUyB,kBAcQ,SAArBC,IACCC,gBAAgBC,IAGK,MAAvBD,KAAKE,iBACRC,aAAaH,KAAKE,cAAc,EAChCF,KAAKE,eAAiB,MAGvBF,KAAKE,eAAiBE,WAAW,KAChClB,EAAKc,KAAKK,iBAAkB,CAACC,EAAOC,KAC/BP,KAAKQ,wBAAwBD,KAChCP,KAAKQ,wBAAwBD,GAAKD,EAAON,KAAKS,MAAMF,EAAI,EACxDP,KAAKS,MAAMF,GAAOD,EAEpB,CAAC,EACDN,KAAKK,iBAAmB,EACzB,EAAG,CAAC,EACL,CAlBA,MAqBMK,EAAa,GAAW,KAAOC,EAAKC,YAAY,EAGhDC,EAAU,CAACC,EAAWC,IAAe,IAAcC,EAAQF,GAAaC,CAAW,QAOnFd,EAOLgB,YAAYC,GAEX,GAAI,CAACrC,EAASqC,CAAO,EACpB,MAAM,IAAIC,MAAM,oCAAoC,EAIrDnB,KAAKQ,wBAA0B,GAC/BR,KAAKoB,kBAAoB,GAGzBpB,KAAKS,MAAQ,GACbT,KAAKK,iBAAmB,GACxBL,KAAKE,eAAiB,KAGtBhB,EAAKgC,EAAS,CAACG,EAAGC,KACjBtB,KAAKuB,WAAWD,EAAGD,CAAC,CACrB,CAAC,CACF,CAQAE,WAAWZ,EAAMvB,GAOhB,OANIR,EAAWQ,CAAI,EAClBY,KAAKQ,wBAAwBG,GAAQvB,GAE7BZ,EAAOY,CAAI,GAAKd,EAAYc,CAAI,IACxCY,KAAKwB,cAAcb,CAAI,EAEjBX,IACR,CAOAwB,cAAcb,GAEb,OADA,OAAOX,KAAKQ,wBAAwBG,GAC7BX,IACR,CASAyB,SAASC,GACR,GAAK7C,EAAS6C,CAAS,EAMvB,OAHAxC,EAAKwC,EAAW,CAACpB,EAAOC,KACvBP,KAAKS,MAAMF,GAAOD,CACnB,CAAC,EACMN,IACR,CAYA2B,WAAWD,GACV,GAAK7C,EAAS6C,CAAS,EAYvB,OATAxC,EAAKwC,EAAW,CAACpB,EAAOC,KACnBP,KAAKS,MAAMF,KAASD,IACvBN,KAAKK,iBAAiBE,GAAOD,EAE/B,CAAC,EAGDP,EAAmB6B,MAAM5B,IAAI,EAEtBA,IACR,CAYA6B,aAUC,OATA3C,EAAK4C,UAAW,IACX9B,KAAKQ,wBAAwBuB,KAChC/B,KAAKK,iBAAiB0B,GAAc/B,KAAKS,MAAMsB,GAEjD,CAAC,EAGDhC,EAAmB6B,MAAM5B,IAAI,EAEtBA,IACR,CAWAgC,eAAelB,EAAWmB,EAAWP,GACpC,MAAMQ,EAAOlC,KAEbc,EAAYJ,EAAWI,CAAS,EAE1BqB,EAAQxD,EAASsD,CAAS,EAC7B/D,SAASC,iBAAiB8D,CAAS,EACnCA,EASH,OAPA/C,EAAKiD,EAAOtB,EAAQC,EAAW,SAASsB,GACnCxD,EAAW8C,CAAS,EACvBQ,EAAKP,WAAWD,EAAUU,EAAOF,EAAKzB,KAAK,CAAC,EAE5CyB,EAAKP,WAAWD,CAAS,CAE3B,CAAC,CAAC,EACK1B,IACR,CACD,CAKA,IAAMqC,EAAS,IAAI,aAUnBA,EAAOC,eAAiB,SAASC,GAChC,OAAO,IAAItC,EAASsC,CAAY,CACjC,EAWAF,EAAOG,cAAgB,SAASC,EAAcC,EAAcC,GAE3D,GAAI7D,CAAAA,EAAQ2D,CAAY,EAAxB,CAIA,MAAMhC,EAAQiC,GAAgB,GACxBE,EAAiBD,EAEvB,IAgBME,EAAY,IACjB,IAAM7B,EAAUoB,EAAMU,WAChBf,EAAaf,EAAQ+B,aAAa,MAAM,EACzChB,IAILtB,EAAMsB,GAAcf,EAAQV,MAC5BsC,IAAkBA,EAAeb,CAAU,CAC5C,EAoBMiB,EAAcnC,EAAQ,WAAYgC,CAAS,EAC3CI,EAAcpC,EAAQ,UAAYgC,CAAS,EAC3CK,EAAiBrC,EAAQ,WA/CT,IACrB,IAAMG,EAAUoB,EAAMU,WAChBf,EAAaf,EAAQ+B,aAAa,MAAM,EACzChB,IAIDf,EAAQmC,QACX1C,EAAMsB,GAAcf,EAAQV,MAG5B,OAAOG,EAAMsB,GAEda,IAAkBA,EAAeb,CAAU,CAC5C,CAiCwD,EAClDqB,EAAevC,EAAQ,WArBT,IACnB,IAMMwC,EANArC,EAAUoB,EAAMU,WAChBf,EAAaf,EAAQ+B,aAAa,MAAM,EACzChB,IAICsB,EAAQ,CAAC,CAACrC,EAAQ+B,aAAa,UAAU,EAG9CtC,EAAMsB,GADHsB,EACiB,CAAE,GAAGrC,EAAQsC,SAAUC,OAAO,GAAYC,EAAOC,QAAQ,EAAEC,IAAI,GAAYF,EAAOlD,KAAK,EAGvFU,EAAQV,MAE7BsC,IAAkBA,EAAeb,CAAU,CAC5C,CAKoD,EAEpD,IAAK1C,IAAIsE,EAAI,EAAGA,EAAIlB,EAAa1D,OAAQ4E,CAAC,GAAI,CAC7C,IAAMC,EAAcnB,EAAakB,GACL,UAAxBC,EAAYC,QACU,aAArBD,EAAYpE,MAA4C,UAArBoE,EAAYpE,KAClD0D,EAAeU,CAAW,EAEG,WAArBA,EAAYpE,MAA0C,WAArBoE,EAAYpE,OACrDwD,EAAYY,CAAW,EACvBX,EAAYW,CAAW,GAGQ,aAAxBA,EAAYC,SACpBb,EAAYY,CAAW,EACvBX,EAAYW,CAAW,GAES,WAAxBA,EAAYC,SACpBT,EAAaQ,CAAW,CAE1B,CAEA,OAAOnD,CA3EP,CA4ED,EAIApB,IAAIyE,EAAmBhG,EAAIiG,IAK3B1B,EAAO2B,WAAa,WACnBlG,EAAIiG,IAAOD,CACZ,EAEAhG,EAAIuE,OAASA,EACbvE,EAAIiG,IAAS1B,CAEb,EAAErC,IAAI"}