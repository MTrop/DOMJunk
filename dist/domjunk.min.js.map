{"version":3,"sources":["STDIN"],"sourcesContent":["/****************************************************************************\r\n * DOMJunk by Matt Tropiano (C) 2021\r\n * Requires ECMAScript 6\r\n * Licensed for use under the MIT License\r\n * @license\r\n ****************************************************************************/\r\n(function(CTX, document){\r\n\t\r\n\t/********************************************************************/\r\n\t/** Test Browser Capabilities                                      **/\r\n\t/********************************************************************/\r\n\r\n\tif (!CTX.Element) {\r\n\t\tconsole.error(\"Missing required type: Element.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: document.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelector) {\r\n\t\tconsole.error(\"Missing required function: document.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.createElement) {\r\n\t\tconsole.error(\"Missing required function: document.createElement.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.createTextNode) {\r\n\t\tconsole.error(\"Missing required function: document.createTextNode.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelector) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Utilities                                                      **/\r\n\t/********************************************************************/\r\n\r\n\tconst ENTITIES = {\r\n\t\t'&': '&amp;',\r\n\t\t'<': '&lt;',\r\n\t\t'>': '&gt;',\r\n\t\t'\"': '&quot;',\r\n\t\t\"'\": '&#39;',\r\n\t\t'/': '&#x2F;',\r\n\t\t'`': '&#x60;',\r\n\t\t'=': '&#x3D;'\r\n\t};\r\n\t\r\n\tconst HTML_SPECIAL = /&|\\<|\\>|\\\"|\\'|\\/|`|=/g;\r\n\r\n\tconst HTML_REGEX = /<\\/?[a-z][\\s\\S]*>/i;\r\n\r\n\tconst HTML_ESCAPE = (input) => input.replace(HTML_SPECIAL, (m) => ENTITIES[m]);\r\n\r\n\tconst isType = function(obj, type) {\r\n\t\treturn Object.prototype.toString.call(obj) === '[object '+type+']';\r\n\t};\r\n\r\n\tconst isUndefined = function(obj) {\r\n\t\treturn (typeof obj) === 'undefined';\r\n\t};\r\n\r\n\tconst isNull = function(obj) {\r\n\t\treturn obj === null;\r\n\t};\r\n\r\n\tconst isBoolean = function(obj) {\r\n\t\treturn isType(obj, 'Boolean');\r\n\t};\r\n\r\n\tconst isNumber = function(obj) {\r\n\t\treturn isType(obj, 'Number');\r\n\t};\r\n\r\n\tconst isString = function(obj) {\r\n\t\treturn isType(obj, 'String');\r\n\t};\r\n\r\n\tconst isArray = function(obj) {\r\n\t\treturn isType(obj, 'Array');\r\n\t};\r\n\r\n\tconst isFunction = function(obj) {\r\n\t\treturn isType(obj, 'Function');\r\n\t};\r\n\r\n\tconst isObject = function(obj) {\r\n\t\treturn isType(obj, 'Object');\r\n\t};\r\n\r\n\tconst isBlank = function(obj) {\r\n\t\treturn (\r\n\t\t\t\tisUndefined(obj)\r\n\t\t\t|| isNull(obj) \r\n\t\t\t|| (isArray(obj) && obj.length === 0) \r\n\t\t\t|| (isNumber(obj) && isNaN(obj)) \r\n\t\t\t|| (isString(obj) && obj.trim().length === 0)\r\n\t\t\t|| obj === 0 \r\n\t\t);\r\n\t};\r\n\t\r\n\tconst each = function(list, func) {\r\n\t\tif (isUndefined(list) || isNull(list)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (isBoolean(list) || isNumber(list) || isString(list)) {\r\n\t\t\tfunc(list, null, 1);\r\n\t\t}\r\n\t\telse if (isArray(list)) {\r\n\t\t\tfor (let i = 0; i < list.length; i++) {\r\n\t\t\t\tif (func(list[i], i, list.length))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let x in list) if (list.hasOwnProperty(x)) {\r\n\t\t\t\tif (func(list[x], x, list.length))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst fold = function(obj, func) {\r\n\t\tfunc(obj);\r\n\t\treturn obj;\r\n\t};\r\n\r\n\tconst queryString = function(map) {\r\n\t\tlet accum = [];\r\n\t\teach(map, (value, key) => {\r\n\t\t\tif (isArray(value)) {\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\taccum.push(\r\n\t\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!isUndefined(value) && !isNull(value)) {\r\n\t\t\t\taccum.push(\r\n\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn accum.join('&');\r\n\t};\r\n\t\r\n\tconst isHTML = function(obj) {\r\n\t\treturn HTML_REGEX.test(obj);\r\n\t}\r\n\r\n\tconst createHTML = function(html) {\r\n\t\tconst outElement = document.createElement('template');\r\n\t\toutElement.innerHTML = html;\r\n\t\treturn outElement.content.childNodes;\r\n\t};\r\n\r\n\tconst createElement = function(name, attribs, children) {\r\n\t\tconst out = document.createElement(name);\r\n\t\tif (attribs) each(attribs, (v, k) => {\r\n\t\t\tconst attrObj = document.createAttribute(k);\r\n\t\t\tattrObj.value = v;\r\n\t\t\tout.setAttributeNode(attrObj);\r\n\t\t});\r\n\r\n\t\tif (children) {\r\n\t\t\tif (isArray(children)) {\r\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\tout.appendChild(children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout.appendChild(children);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t};\r\n\r\n\tconst createText = function(data) {\r\n\t\treturn document.createTextNode(data);\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\t/** Other Getters                                                  **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Fetches an element by its id attribute and wraps it in a SelectionGroup.\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} id the id.\r\n\t * @returns {SelectionGroup} the corresponding element in a SelectionGroup, or empty group if no element.\r\n\t */\r\n\tconst $getById = function(id) {\r\n\t\treturn new SelectionGroup(document.getElementById(id));\r\n\t};\r\n\r\n\t/**\r\n\t * Fetches a group of elements by an associated class name.\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} classname the class name.\r\n\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t */\r\n\tconst $getByClassName = function(classname) {\r\n\t\treturn new SelectionGroup(document.getElementsByClassName(classname));\r\n\t};\r\n\r\n\t/**\r\n\t * Fetches a group of elements by an associated tag name (and optional namespace).\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} tagname the tag name.\r\n\t * @param {string} namespace (optional) the tag namespace.\r\n\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t */\r\n\tconst $getByTagName = function(tagname, namespace) {\r\n\t\treturn isUndefined(namespace) \r\n\t\t\t? new SelectionGroup(document.getElementsByTagName(tagname)) \r\n\t\t\t: new SelectionGroup(document.getElementsByTagNameNS(namespace, tagname))\r\n\t\t;\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Classes                                                        **/\r\n\t/********************************************************************/\r\n\r\n\tclass SelectionGroup extends Array {\r\n\t\tconstructor(elements, forceOne) {\r\n\t\t\tsuper();\r\n\t\t\t// Make empty if no elements.\r\n\t\t\tif (isUndefined(elements) || isNull(elements)) {\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t}\r\n\t\t\t// Wrap in one thing if not an array or list.\r\n\t\t\telse if (!!forceOne || isUndefined(elements.length)) {\r\n\t\t\t\tthis[0] = elements;\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t}\r\n\t\t\t// Else, turn into selection.\r\n\t\t\telse {\r\n\t\t\t\tif (elements.length < 100000) {\r\n\t\t\t\t\tthis.push(...elements);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let i = 0; i < elements.length; i++)\r\n\t\t\t\t\t\tthis[i] = elements[i];\r\n\t\t\t\t\tthis.length = elements.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Commands                                                       **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Calls a function on each element in the SelectionGroup.\r\n\t * Each element is passed to the function as \"this\" and the first \r\n\t * parameter (for fat-arrow lambdas that preserve \"this\").\r\n\t * @param {function} func the function to call for each element.\r\n\t */\r\n\tconst $each = function(func) {\r\n\t\tfunc.apply(this, [this]);\r\n\t};\r\n\r\n\t/**\r\n\t * Performs a document query on the first DOM element in the SelectionGroup, \r\n\t * and returns a new SelectionGroup of the result.\r\n\t * @param {string} query the CSS/document query.\r\n\t * @param {boolean} one (optional) if true, return the first match.\r\n\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t */\r\n\tconst $search = function(query, one) {\r\n\t\treturn !!one \r\n\t\t\t? new SelectionGroup(this.querySelector(query)) \r\n\t\t\t: new SelectionGroup(this.querySelectorAll(query))\r\n\t\t;\r\n\t};\r\n\r\n\t/**\r\n\t * Gets a child of the first DOM element in the SelectionGroup.\r\n\t * @param {number} index the index of the child element to fetch.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the single child.\r\n\t */\r\n\tconst $child = function(index) {\r\n\t\treturn new SelectionGroup(this.children[index]);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all immediate children of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the children.\r\n\t */\r\n\tconst $children = function() {\r\n\t\treturn new SelectionGroup(this.children);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the immediate parent of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the parent element.\r\n\t */\r\n\tconst $parent = function() {\r\n\t\treturn new SelectionGroup(this.parentElement);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the parents of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the parent elements.\r\n\t */\r\n\tconst $ancestors = function() {\r\n\t\tlet elem = this;\r\n\t\tconst out = [];\r\n\t\twhile (elem.parentElement !== null) {\r\n\t\t\tout.push(elem.parentElement);\r\n\t\t\telem = elem.parentElement;\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all of the children and the children's children of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the descending elements.\r\n\t */\r\n\tconst $descendants = function() {\r\n\t\tconst out = [];\r\n\t\tconst childQueue = [ ...this.children];\r\n\t\twhile (childQueue.length > 0) {\r\n\t\t\tconst child = childQueue.pop();\r\n\t\t\tout.push(child);\r\n\t\t\tfor (let i = 0; i < child.children.length; i++) {\r\n\t\t\t\tchildQueue.push(child.children[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all of the siblings of first DOM element in the SelectionGroup (parent's children nminus the source element).\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the sibling elements.\r\n\t */\r\n\tconst $siblings = function() {\r\n\t\tconst out = [];\r\n\t\tconst children = [ ...this.parentElement.children];\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tconst child = children[i];\r\n\t\t\tif (child !== this)\r\n\t\t\t\tout.push(child);\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup.\r\n\t */\r\n\tconst $clear = function() {\r\n\t\twhile (this.firstChild) {\r\n\t\t\tthis.removeChild(this.firstChild);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Appends one or more child elements to all of the children in each DOM element in the SelectionGroup.\r\n\t * If elements is an array, each child in the array is appended.\r\n\t * If elements is a Document, that Document's children are appended.\r\n\t * Otherwise, elements is considered to be one element, and it is appended.\r\n\t * @param {*} elements one or more children to add.\r\n\t */\r\n\tconst $append = function(elements) {\r\n\t\tif (elements instanceof SelectionGroup || isArray(elements)) {\r\n\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (elements instanceof NodeList) {\r\n\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (elements instanceof Document || elements instanceof DocumentFragment) {\r\n\t\t\tfor (let i = 0; i < elements.children.length; i++) {\r\n\t\t\t\tthis.appendChild(elements.children[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.appendChild(elements);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * fills them with a new list of children.\r\n\t * Equivalent to: .clear().append(elements)\r\n\t * @param {*} elements one or more children to add.\r\n\t */\r\n\tconst $refill = function(elements) {\r\n\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * fills them with a new list of children.\r\n\t * Equivalent to: .clear().append(DOMJunk.createTemplateElements(template, model))\r\n\t * @param {Template | SelectionGroup} template the template element to use (can be a SelectionGroup - the first element is used if so).\r\n\t * @param {Object} model the model for the template.\r\n\t */\r\n\tconst $refillTemplate = function(template, model) {\r\n\t\tif (template instanceof SelectionGroup)\r\n\t\t\ttemplate = template[0];\r\n\t\t(new SelectionGroup(this)).clear().append(DOMJunk.createTemplateElements(\r\n\t\t\ttemplate, model\r\n\t\t));\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * then, using the provided array of data, fills them with children generated\r\n\t * from the provided array.\r\n\t * If a non-truthy value is returned for an array element, it is not added.\r\n\t * @param {Array} arr the array of objects. Can be an object - they are both iterated on.\r\n\t * @param {Function} generatorFunc the element generator function. \r\n\t * \t\tFirst parameter is the array element to use, second is the array/map key.\r\n\t */\r\n\tconst $refillList = function(arr, generatorFunc) {\r\n\t\tconst elements = [];\r\n\t\teach(arr, (v, k) => {\r\n\t\t\tconst gen = generatorFunc(v, k);\r\n\t\t\tif (gen) {\r\n\t\t\t\telements.push(gen);\r\n\t\t\t}\r\n\t\t});\r\n\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets/Sets the inner HTML.\r\n\t * If HTML is provided, the inner HTML is set.\r\n\t * If it is undefined, this will return the inner HTML of the first DOM element in the SelectionGroup.\r\n\t * @param {string} data HTML data to set.\r\n\t */\r\n\tconst $html = function(data) {\r\n\t\tif (isUndefined(data)) {\r\n\t\t\treturn this.innerHTML;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.innerHTML = data;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Gets/Sets the inner text.\r\n\t * If text is provided, the inner HTML is set to the text. Special characters will be converted to entities.\r\n\t * If it is undefined, this will return the inner text of the first DOM element in the SelectionGroup.\r\n\t * @param {string} data HTML data to set.\r\n\t */\r\n\tconst $text = function(text) {\r\n\t\tif (isUndefined(text)) {\r\n\t\t\treturn this.innerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.innerHTML = HTML_ESCAPE(text);\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Sets a member on each element of the SelectionGroup to a value.\r\n\t * @param {string} memberName the member name.\r\n\t * @param {*} value the value.\r\n\t */\r\n\tconst $set = function(memberName, value) {\r\n\t\tthis[memberName] = value;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Merges several members into each object's members in the SelectionGroup.\r\n\t * @param {object} memberMap the mapping of member names to values.\r\n\t */\r\n\tconst $merge = function(memberMap) {\r\n\t\teach(memberMap, (v, k) => {\r\n\t\t\tthis[k] = v;\r\n\t\t});\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Merges a set of CSS attributes into each element's local style in the SelectionGroup, or fetches them from the first.\r\n\t * If input is undefined, this will return a copied object of this element's local styles.\r\n\t * If input is an array of CSS attribute names, this will return an object of this element's corresponding local style values.\r\n\t * If input is a CSS attribute name, this will return this element's corresponding local style values.\r\n\t * If input is an object, this sets each element's local style values to the provided CSS attribute names and values.\r\n\t * @param {*} input the input value.\r\n\t */\r\n\tconst $style = function(input) {\r\n\t\tif (isUndefined(input)) {\r\n\t\t\treturn { ...this.style };\r\n\t\t}\r\n\t\telse if (isArray(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\teach(input, (s) => {\r\n\t\t\t\tout[s] = this.style[s];\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isObject(input)) {\r\n\t\t\teach(input, (v, k) => {\r\n\t\t\t\tthis.style[k] = v;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.style[input];\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Merges a set of DOM attributes into each element's attributes in the SelectionGroup, or fetches them from the first.\r\n\t * If input is undefined, this will return an object of this element's attribute values.\r\n\t * If input is an array of attribute names, this will return an object of this element's corresponding attribute values.\r\n\t * If input is an attribute name, this will return this element's corresponding attribute value.\r\n\t * If input is an object, this sets each element's attributes to the provided corresponding values.\r\n\t * @param {*} input the input value.\r\n\t */\r\n\tconst $attr = function(input) {\r\n\t\tif (isUndefined(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\tconst names = this.getAttributeNames();\r\n\t\t\tfor (let i = 0; i < names.length; i++) {\r\n\t\t\t\tout[names[i]] = this.getAttribute(names[i]);\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isArray(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\teach(input, (a) => {\r\n\t\t\t\tout[a] = this.getAttribute(a);\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isObject(input)) {\r\n\t\t\teach(input, (v, k) => {\r\n\t\t\t\tthis.setAttribute(k, v);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getAttribute(input);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a set of CSS classes to each element in the SelectionGroup.\r\n\t * @param {string} classNames... the vararg list of class names to add to each element.\r\n\t */\r\n\tconst $classAdd = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t});\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tif (!classSet[classNames[i]]) {\r\n\t\t\t\tclasses.push(classNames[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.className = classes.join(\" \");\r\n\t};\r\n\r\n\t/**\r\n\t * Removes a set of CSS classes from each element in the SelectionGroup.\r\n\t * @param {string} classNames... the vararg list of class names to remove from each element.\r\n\t */\r\n\tconst $classRemove = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst remset = {};\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tremset[classNames[i]] = true;\r\n\t\t}\r\n\t\tconst out = [];\r\n\t\teach(classes, (c) => {\r\n\t\t\tif (!remset[c]) {\r\n\t\t\t\tout.push(c);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (isBlank(out))\r\n\t\t\tthis.removeAttribute('class');\r\n\t\telse\r\n\t\t\tthis.className = out.join(\" \");\r\n\t};\r\n\r\n\t/**\r\n\t * Toggles the presence of a set of CSS classes in each element in the SelectionGroup.\r\n\t * If the class exists, it is removed, and if the class does not exist, it is added.\r\n\t * @param {string} classNames... the vararg list of class names to toggle in each element.\r\n\t */\r\n\tconst $classToggle = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t});\r\n\t\tconst argSet = fold({}, (obj) => {\r\n\t\t\teach(classNames, (c) => {\r\n\t\t\t\tobj[c] = true;\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tconst out = [];\r\n\r\n\t\tfor (let i = 0; i < classes.length; i++) {\r\n\t\t\tconst name = classes[i];\r\n\t\t\tif (!argSet[name]) {\r\n\t\t\t\tout.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tconst name = classNames[i];\r\n\t\t\tif (!classSet[name]) {\r\n\t\t\t\tout.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isBlank(out))\r\n\t\t\tthis.removeAttribute('class');\r\n\t\telse\r\n\t\t\tthis.className = out.join(\" \");\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Scrapes a form element for its values and returns an object of the name-value pairings of the form fields,\r\n\t * or an object mapping (name/id for key).\r\n\t * The 'id' attribute is used if 'name' is not provided. Unnamed, disabled, or unchecked form elements are not scraped.\r\n\t * @param {function} callback (optional) if provided, call this function with one argument: the data returned.\r\n\t * @returns an object of the name/value pairings of the form fields, or the pass-through selection group if a callback was provided.\r\n\t */\r\n\tconst $form = function(callback) {\r\n\t\t\r\n\t\tif (!isUndefined(callback) && !isFunction(callback)) {\r\n\t\t\tthrow new Error(\"Callback function for formData must be a function!\");\r\n\t\t}\r\n\t\t\r\n\t\tconst formData = {};\r\n\r\n\t\tconst GATHERFUNC = function() {\r\n\t\t\tconst memberName = this.getAttribute('name');\r\n\t\t\tif (!!memberName) {\r\n\t\t\t\tif (!this.disabled) {\r\n\t\t\t\t\tconst t = this.getAttribute('type');\r\n\t\t\t\t\tconst v = (t === 'checkbox' || t === 'radio') \r\n\t\t\t\t\t\t? this.checked && this.value\r\n\t\t\t\t\t\t: this.value;\r\n\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\tif (isObject(formData[memberName])) {\r\n\t\t\t\t\t\t\tformData[memberName].push(v);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (formData[memberName]) {\r\n\t\t\t\t\t\t\tlet arr = [formData[memberName], v];\r\n\t\t\t\t\t\t\tformData[memberName] = arr;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tformData[memberName] = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t(new SelectionGroup(this)).search('input, textarea, select').each(GATHERFUNC);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback(formData);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn formData;\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Attaches a function to a DOM element event handler.\r\n\t * The function should take a single parameter: the event that triggered this.\r\n\t * @param {string} eventName the event name (for example, \"mouseenter\", \"click\", etc.).\r\n\t * @param {Function} func the function to attach.\r\n\t */\r\n\tconst $attach = function(eventName, func) {\r\n\t\tthis.addEventListener(eventName, func);\r\n\t};\r\n\r\n\t/**\r\n\t * Detaches a function from a DOM element event handler (the \"on\" members).\r\n\t * @param {string} eventName the event name (for example, \"mouseenter\", \"click\", etc.).\r\n\t * @param {Function} func the function to detach.\r\n\t */\r\n\tconst $detach = function(eventName, func) {\r\n\t\tthis.removeEventListener(eventName, func);\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Wraps a single element in the SelectionGroup in a new SelectionGroup.\r\n\t * @param {number} index the index of the selected element.\r\n\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t */\r\n\tconst $get = function(index) {\r\n\t\treturn new SelectionGroup(this[index]);\r\n\t};\r\n\r\n\t/**\r\n\t * Wraps the first element in the SelectionGroup in a new SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t */\r\n\tconst $first = function() {\r\n\t\treturn new SelectionGroup(this[0]);\r\n\t};\r\n\r\n\t/**\r\n\t * Wraps the last element in the SelectionGroup in a new SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t */\r\n\tconst $last = function() {\r\n\t\treturn new SelectionGroup(this[this.length - 1]);\r\n\t};\r\n\r\n\t/**\r\n\t * Takes a single object where the keys are selector queries to run via .search() and\r\n\t * corresponding values are functions to call on the selection results via .each().\r\n\t * @param {Object} selectorMap the mapping of selector strings to functions.\r\n\t */\r\n\tconst $apply = function(selectorMap) {\r\n\t\teach(selectorMap, (v, k) => {\r\n\t\t\tthis.search(k).each(v);\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Unwraps a query, returning every element in the query as-is.\r\n\t * @returns {Array} the array of elements. \r\n\t */\r\n\tconst $elements = function() {\r\n\t\treturn [ ...this];\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Exported                                                       **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Performs a document query, returning the list of matches as a SelectionGroup.\r\n\t * If the first argument is undefined or null, an empty SelectionGroup is returned.\r\n\t * If the first argument is a SelectionGroup (created from this function), a copy of the SelectionGroup is returned.\r\n\t * If the first argument is a string: \r\n\t * \t\tif the string contains HTML, it will generate HTML elements and wrap them in a SelectionGroup.\r\n\t * \t\telse, it is treated as a CSS selector, and the elements that match are in the SelectionGroup. \r\n\t * Anything else, and the SelectionGroup contains that object, or treats it like a group if it is an array.\r\n\t * @param {*} query the CSS/document query.\r\n\t * @param {boolean} one (optional) if true, and CSS selector, return only the first match.\r\n\t * @returns {SelectionGroup} the matching elements, encapsulated.\r\n\t */\r\n\tconst DOMJunk = new function() {\r\n\t\treturn function(query, one) {\r\n\t\t\tif (isUndefined(query) || isNull(query)) {\r\n\t\t\t\treturn new SelectionGroup([]);\r\n\t\t\t}\r\n\t\t\telse if (query instanceof SelectionGroup || isArray(query)) {\r\n\t\t\t\treturn new SelectionGroup([ ...query])\r\n\t\t\t}\r\n\t\t\telse if (isString(query)) {\r\n\t\t\t\tif (isHTML(query)) {\r\n\t\t\t\t\treturn new SelectionGroup(createHTML(query));\r\n\t\t\t\t} \r\n\t\t\t\telse {\r\n\t\t\t\t\treturn !!one \r\n\t\t\t\t\t\t? new SelectionGroup(document.querySelector(query))\r\n\t\t\t\t\t\t: new SelectionGroup(document.querySelectorAll(query))\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn new SelectionGroup(query)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t * The function's [this] keyword becomes each element.\r\n\t * When the function is called, it is called once per element, unless the function returns a value.\r\n\t * If the function returns a value (not undefined), it is returned as the result.\r\n\t * If it never returned a function, the SelectionGroup instance is returned as the result.\r\n\t * @param {string} name the name of the function to add to all query results.\r\n\t * @param {Function} func the function itself (cannot be a lambda closure).\r\n\t */\r\n\tDOMJunk.extend = function(name, func) {\r\n\t\tif (SelectionGroup.prototype[name]) {\r\n\t\t\tconsole.warn('DOMJunk: Overriding existing function: ' + name);\r\n\t\t}\r\n\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\tlet retval;\r\n\t\t\tfor (let i = 0; i < this.length && isUndefined(retval); i++) {\r\n\t\t\t\tretval = func.apply(this[i], arguments);\r\n\t\t\t}\r\n\t\t\treturn isUndefined(retval) ? this : retval;\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t * The function's [this] keyword becomes the SelectionGroup itself.\r\n\t * @param {string} name the name of the function to add.\r\n\t * @param {Function} func the function to add (cannot be a lambda closure).\r\n\t */\r\n\tDOMJunk.extendSelection = function(name, func) {\r\n\t\tif (SelectionGroup.prototype[name]) {\r\n\t\t\tconsole.warn('DOMJunk: Overriding existing function: ' + name);\r\n\t\t}\r\n\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\treturn func.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Auto-selects a series of selection groups using an object that maps\r\n\t * member name to selector query or function that returns a SelectionGroup.\r\n\t * @param {Object} memberSet a map of member name to selector.\r\n\t * \t\tIf the selector is a string, it is used as a selector to build the group.\r\n\t * \t\tElse if it's a function, it is called to return the member's value.\r\n\t * \t\tElse, it is the member's value.\r\n\t * @returns {Object} a new object that is a mapping of name to SelectionGroup.\r\n\t */\r\n\tDOMJunk.createGroups = function(memberSet) {\r\n\t\tconst out = {};\r\n\t\teach(memberSet, (selector, memberName) => {\r\n\t\t\tlet value = null;\r\n\t\t\tif (isString(selector)) {\r\n\t\t\t\tvalue = DOMJunk(selector);\r\n\t\t\t} else if (isFunction(selector)) {\r\n\t\t\t\tvalue = selector();\r\n\t\t\t} else {\r\n\t\t\t\tvalue = selector;\r\n\t\t\t}\r\n\r\n\t\t\tout[memberName] = value;\r\n\t\t});\r\n\t\treturn out;\r\n\t};\r\n\r\n\t/**\r\n\t * Creates one or more elements from a template element, applying a model to\r\n\t * it, and returning a generated element. The template content is assumed to have\r\n\t * \"handlebar\" tokens in them (\"{{tokenName}}\") that contain the name of the member to resolve\r\n\t * in the model. The names can be separated by dots (\".\") to resolve child elements in the model.\r\n\t * @param {Element} templateElement the template element or a query containing\r\n\t * \t\ta template element to use as the template.\r\n\t * @param {Object | Array} model a model to use for filling the template.\r\n\t * \t\tIf model is an Array, multiple templates are made and returned.\r\n\t * @returns {Array} an array of generated elements.\r\n\t */\r\n\tDOMJunk.createTemplateElements = function(templateElement, model) {\r\n\t\tconst templateData = document.importNode(templateElement, true);\r\n\t\tconst templateContent = templateData.innerHTML.trim();\r\n\r\n\t\tconst _GENERATEELEMENT = (modelObject) => {\r\n\t\t\tconst matches = templateContent.match(/{{.+?}}/g);\r\n\t\t\tlet lastSearchIndex = 0;\r\n\t\t\tlet outHTML = '';\r\n\t\t\tif (matches) {\r\n\t\t\t\tfor (let i = 0; i < matches.length; i++) {\r\n\t\t\t\t\tconst token = matches[i]; // has handlebars\r\n\t\t\t\t\tlet matchIndex = templateContent.indexOf(token, lastSearchIndex);\r\n\t\t\t\t\tif (matchIndex >= 0) {\r\n\t\t\t\t\t\toutHTML += templateContent.substring(lastSearchIndex, matchIndex);\r\n\t\t\t\t\t\tconst expression = token.substring(2, token.length - 2);\r\n\t\t\t\t\t\tconst expressionChain = expression.split(\".\");\r\n\t\t\t\t\t\tlet result = modelObject;\r\n\t\t\t\t\t\tfor (let j = 0; j < expressionChain.length; j++) {\r\n\t\t\t\t\t\t\tresult = result[expressionChain[j]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!isUndefined(result)) {\r\n\t\t\t\t\t\t\toutHTML += isNull(result) ? '' : HTML_ESCAPE(result.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastSearchIndex = matchIndex + token.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\toutHTML += templateContent.substring(lastSearchIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn createHTML(outHTML);\r\n\t\t};\r\n\r\n\t\tconst generated = [];\r\n\t\tif (isArray(model)) {\r\n\t\t\teach(model, (m) => {\r\n\t\t\t\teach (_GENERATEELEMENT(m), (e) => {\r\n\t\t\t\t\tgenerated.push(e);\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\treturn generated;\r\n\t\t}\r\n\t\telse {\r\n\t\t\teach (_GENERATEELEMENT(model), (e) => {\r\n\t\t\t\tgenerated.push(e);\r\n\t\t\t})\r\n\t\t\treturn generated;\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tlet PERFCOUNTER = 0;\r\n\r\n\t/**\r\n\t * Performance-tests a function for a set of iterations.\r\n\t * @param {Number} iterations the number of iterations to call.\r\n\t * @param {Function} funcCall the function to call repeatedly.\r\n\t */\r\n\tDOMJunk.perfTest = function(iterations, funcCall) {\r\n\t\tconst counter = PERFCOUNTER++;\r\n\t\tconsole.time('perfcount' + counter);\r\n\t\tfor (let i = 0; i < iterations; i++) {\r\n\t\t\tfuncCall();\r\n\t\t}\r\n\t\tconsole.timeEnd('perfcount' + counter);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Performs an time-based iteration test for a function.\r\n\t * @param {Number} time the time to take for the test (resolution based on performance.now()).\r\n\t * @param {Function} funcCall the function to call repeatedly.\r\n\t * @returns {Number} the amount of iterations taken wwithin the desired time.\r\n\t */\r\n\tDOMJunk.iterationTest = function(time, funcCall) {\r\n\t\tlet iterations = 0;\r\n\t\tconst start = performance.now();\r\n\t\twhile(performance.now() - start < time) {\r\n\t\t\tfuncCall();\r\n\t\t\titerations++;\r\n\t\t}\r\n\t\treturn iterations;\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tDOMJunk.extend('each', $each);\r\n\tDOMJunk.extend('search', $search);\r\n\tDOMJunk.extend('child', $child);\r\n\tDOMJunk.extend('children', $children);\r\n\tDOMJunk.extend('parent', $parent);\r\n\tDOMJunk.extend('ancestors', $ancestors);\r\n\tDOMJunk.extend('descendants', $descendants);\r\n\tDOMJunk.extend('siblings', $siblings);\r\n\r\n\tDOMJunk.extend('clear', $clear);\r\n\tDOMJunk.extend('append', $append);\r\n\tDOMJunk.extend('refill', $refill);\r\n\tDOMJunk.extend('refillTemplate', $refillTemplate);\r\n\tDOMJunk.extend('refillList', $refillList);\r\n\tDOMJunk.extend('html', $html);\r\n\tDOMJunk.extend('text', $text);\r\n\r\n\tDOMJunk.extend('set', $set);\r\n\tDOMJunk.extend('merge', $merge);\r\n\r\n\tDOMJunk.extend('style', $style);\r\n\tDOMJunk.extend('attr', $attr);\r\n\tDOMJunk.extend('classAdd', $classAdd);\r\n\tDOMJunk.extend('classRemove', $classRemove);\r\n\tDOMJunk.extend('classToggle', $classToggle);\r\n\r\n\tDOMJunk.extend('attach', $attach);\r\n\tDOMJunk.extend('detach', $detach);\r\n\r\n\tDOMJunk.extendSelection('get', $get);\r\n\tDOMJunk.extendSelection('first', $first);\r\n\tDOMJunk.extendSelection('last', $last);\r\n\tDOMJunk.extendSelection('form', $form);\r\n\tDOMJunk.extendSelection('apply', $apply);\r\n\tDOMJunk.extendSelection('elements', $elements);\r\n\r\n\tconst wrapAttach = function(attachName) {\r\n\t\treturn function(func) { \r\n\t\t\tthis.attach(attachName, func); \r\n\t\t\treturn this;\r\n\t\t};\r\n\t}\r\n\r\n\tDOMJunk.extendSelection('load',       wrapAttach('load'));\r\n\tDOMJunk.extendSelection('unload',     wrapAttach('unload'));\r\n\tDOMJunk.extendSelection('click',      wrapAttach('click'));\r\n\tDOMJunk.extendSelection('dblclick',   wrapAttach('dblclick'));\r\n\tDOMJunk.extendSelection('mouseenter', wrapAttach('mouseenter'));\r\n\tDOMJunk.extendSelection('mouseleave', wrapAttach('mouseleave'));\r\n\tDOMJunk.extendSelection('keydown',    wrapAttach('keydown'));\r\n\tDOMJunk.extendSelection('keyup',      wrapAttach('keyup'));\r\n\tDOMJunk.extendSelection('focus',      wrapAttach('focus'));\r\n\tDOMJunk.extendSelection('blur',       wrapAttach('blur'));\r\n\tDOMJunk.extendSelection('change',     wrapAttach('change'));\r\n\r\n\tDOMJunk.id =    $getById;\r\n\tDOMJunk.class = $getByClassName;\r\n\tDOMJunk.tag =   $getByTagName;\r\n\r\n\tDOMJunk.each = each;\r\n\tDOMJunk.fold = fold;\r\n\tDOMJunk.queryString = queryString;\r\n\r\n\tDOMJunk.isType = isType;\r\n\tDOMJunk.isUndefined = isUndefined;\r\n\tDOMJunk.isNull = isNull;\r\n\tDOMJunk.isBoolean = isBoolean;\r\n\tDOMJunk.isNumber = isNumber;\r\n\tDOMJunk.isString = isString;\r\n\tDOMJunk.isArray = isArray;\r\n\tDOMJunk.isFunction = isFunction;\r\n\tDOMJunk.isObject = isObject;\r\n\tDOMJunk.isBlank = isBlank;\r\n\tDOMJunk.isHTML = isHTML;\r\n\r\n\tDOMJunk.h = createHTML;\r\n\tDOMJunk.e = createElement;\r\n\tDOMJunk.t = createText;\r\n\r\n\t/********************************************************************/\r\n\r\n\tlet old$DJAssignment     = CTX.$DJ;\r\n\tlet old$DJMainAssignment = CTX.$DJMain;\r\n\r\n\t/**\r\n\t * Restores the previous assigment of '$DJ' and '$DJMain' at load.\r\n\t */\r\n\tDOMJunk.noConflict = function() {\r\n\t\tCTX.$DJ     = old$DJAssignment;\r\n\t\tCTX.$DJMain = old$DJMainAssignment;\r\n\t};\r\n\t\r\n\tconst MAINFUNCS = [];\r\n\r\n\tCTX.DOMJunk = DOMJunk;\r\n\tCTX.$DJ     = DOMJunk;\r\n\tCTX.$DJMain = function(func) { \r\n\t\tMAINFUNCS.push(func);\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tdocument.addEventListener(\"DOMContentLoaded\", function(){\r\n\t\tfor (let i = 0; i < MAINFUNCS.length; i++)\r\n\t\t\tMAINFUNCS[i]();\r\n\t});\r\n\r\n\t/**\r\n\t TODO: Add stuff, maybe.\r\n\t\tFormValidate\r\n\t\tFormFill\r\n\t*/\r\n\r\n})(this, document);\r\n"],"names":["CTX","document","Element","console","error","querySelectorAll","querySelector","createElement","createTextNode","prototype","isBoolean","obj","isType","isFunction","isObject","isBlank","isUndefined","isNull","isArray","length","isNumber","isNaN","isString","trim","each","list","func","let","i","x","hasOwnProperty","fold","ENTITIES","&","<",">","\"","'","/","`","=","HTML_SPECIAL","HTML_REGEX","HTML_ESCAPE","input","replace","m","type","Object","toString","call","isHTML","test","createHTML","html","outElement","innerHTML","content","childNodes","SelectionGroup","Array","constructor","elements","forceOne","super","this","push","DOMJunk","query","one","extend","name","warn","retval","apply","arguments","extendSelection","createGroups","memberSet","out","selector","memberName","value","createTemplateElements","templateElement","model","templateContent","importNode","_GENERATEELEMENT","matches","match","lastSearchIndex","outHTML","token","matchIndex","indexOf","substring","expressionChain","split","result","modelObject","j","generated","e","PERFCOUNTER","perfTest","iterations","funcCall","counter","time","timeEnd","iterationTest","start","performance","now","index","children","parentElement","elem","childQueue","child","pop","firstChild","removeChild","appendChild","NodeList","Document","DocumentFragment","clear","append","template","arr","generatorFunc","v","k","gen","data","text","innerText","memberMap","style","s","names","getAttributeNames","getAttribute","a","setAttribute","classNames","classes","className","classSet","map","c","join","remset","removeAttribute","argSet","eventName","addEventListener","removeEventListener","callback","Error","formData","search","disabled","t","checked","selectorMap","wrapAttach","attachName","attach","id","getElementById","class","classname","getElementsByClassName","tag","tagname","namespace","getElementsByTagName","getElementsByTagNameNS","queryString","accum","key","encodeURIComponent","h","attribs","attrObj","createAttribute","setAttributeNode","old$DJAssignment","$DJ","old$DJMainAssignment","$DJMain","noConflict","MAINFUNCS"],"mappings":"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"}