{"version":3,"sources":["STDIN"],"sourcesContent":["/****************************************************************************\r\n * DOMJunk by Matt Tropiano (C) 2021\r\n * Requires ECMAScript 6\r\n * Licensed for use under the MIT License\r\n * @license\r\n ****************************************************************************/\r\n(function(CTX){\r\n\t\r\n\t/********************************************************************/\r\n\t/** Test Browser Capabilities                                      **/\r\n\t/********************************************************************/\r\n\r\n\tif (!CTX.Element) {\r\n\t\tconsole.error(\"Missing required type: Element.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: document.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelector) {\r\n\t\tconsole.error(\"Missing required function: document.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.createElement) {\r\n\t\tconsole.error(\"Missing required function: document.createElement.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.createTextNode) {\r\n\t\tconsole.error(\"Missing required function: document.createTextNode.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelector) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Utilities                                                      **/\r\n\t/********************************************************************/\r\n\r\n\tconst isType = function(obj, type) {\r\n\t\treturn Object.prototype.toString.call(obj) === '[object '+type+']';\r\n\t};\r\n\r\n\tconst isUndefined = function(obj) {\r\n\t\treturn (typeof obj) === 'undefined';\r\n\t};\r\n\r\n\tconst isNull = function(obj) {\r\n\t\treturn obj === null;\r\n\t};\r\n\r\n\tconst isBoolean = function(obj) {\r\n\t\treturn isType(obj, 'Boolean');\r\n\t};\r\n\r\n\tconst isNumber = function(obj) {\r\n\t\treturn isType(obj, 'Number');\r\n\t};\r\n\r\n\tconst isString = function(obj) {\r\n\t\treturn isType(obj, 'String');\r\n\t};\r\n\r\n\tconst isArray = function(obj) {\r\n\t\treturn isType(obj, 'Array');\r\n\t};\r\n\r\n\tconst isFunction = function(obj) {\r\n\t\treturn isType(obj, 'Function');\r\n\t};\r\n\r\n\tconst isObject = function(obj) {\r\n\t\treturn isType(obj, 'Object');\r\n\t};\r\n\r\n\tconst isBlank = function(obj) {\r\n\t\treturn (\r\n\t\t\t\tisUndefined(obj)\r\n\t\t\t|| isNull(obj) \r\n\t\t\t|| (isArray(obj) && obj.length === 0) \r\n\t\t\t|| (isNumber(obj) && isNaN(obj)) \r\n\t\t\t|| (isString(obj) && obj.trim().length === 0)\r\n\t\t\t|| obj === 0 \r\n\t\t);\r\n\t};\r\n\t\r\n\tconst each = function(list, func) {\r\n\t\tif (isUndefined(list) || isNull(list)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (isBoolean(list) || isNumber(list) || isString(list)) {\r\n\t\t\tfunc(list, null, 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let x in list) if (list.hasOwnProperty(x)) {\r\n\t\t\t\tif (func(list[x], x, list.length))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst fold = function(obj, func) {\r\n\t\tfunc(obj);\r\n\t\treturn obj;\r\n\t};\r\n\r\n\tconst queryString = function(map) {\r\n\t\tlet accum = [];\r\n\t\teach(map, (value, key) => {\r\n\t\t\tif (isArray(value)) {\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\taccum.push(\r\n\t\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!isUndefined(value) && !isNull(value)) {\r\n\t\t\t\taccum.push(\r\n\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn accum.join('&');\r\n\t};\r\n\t\r\n\tconst createHTML = function(html) {\r\n\t\tconst outElement = document.createElement('template');\r\n\t\toutElement.innerHTML = html;\r\n\t\treturn outElement.content.childNodes;\r\n\t};\r\n\r\n\tconst createElement = function(name, attribs, children) {\r\n\t\tconst out = document.createElement(name);\r\n\t\tif (attribs) each(attribs, (v, k) => {\r\n\t\t\tconst attrObj = document.createAttribute(k);\r\n\t\t\tattrObj.value = v;\r\n\t\t\tout.setAttributeNode(attrObj);\r\n\t\t});\r\n\r\n\t\tif (children) {\r\n\t\t\tif (isArray(children)) {\r\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\tout.appendChild(children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout.appendChild(children);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t};\r\n\r\n\tconst createText = function(data) {\r\n\t\treturn document.createTextNode(data);\r\n\t};\r\n\r\n\tconst ENTITIES = {\r\n\t\t'&': '&amp;',\r\n\t\t'<': '&lt;',\r\n\t\t'>': '&gt;',\r\n\t\t'\"': '&quot;',\r\n\t\t\"'\": '&#39;',\r\n\t\t'/': '&#x2F;',\r\n\t\t'`': '&#x60;',\r\n\t\t'=': '&#x3D;'\r\n\t};\r\n\t\r\n\tconst HTML_SPECIAL = /&|\\<|\\>|\\\"|\\'|\\/|`|=/g;\r\n\r\n\tconst HTML_ESCAPE = (input) => input.replace(HTML_SPECIAL, (m) => ENTITIES[m]);\r\n\r\n\t/********************************************************************/\r\n\t/** Other Getters                                                  **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Fetches an element by its id attribute and wraps it in a SelectionGroup.\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} id the id.\r\n\t * @returns {SelectionGroup} the corresponding element in a SelectionGroup, or empty group if no element.\r\n\t */\r\n\tconst $getById = function(id) {\r\n\t\treturn new SelectionGroup(document.getElementById(id));\r\n\t};\r\n\r\n\t/**\r\n\t * Fetches a group of elements by an associated class name.\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} classname the class name.\r\n\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t */\r\n\tconst $getByClassName = function(classname) {\r\n\t\treturn new SelectionGroup(document.getElementsByClassName(classname));\r\n\t};\r\n\r\n\t/**\r\n\t * Fetches a group of elements by an associated tag name (and optional namespace).\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} tagname the tag name.\r\n\t * @param {string} namespace (optional) the tag namespace.\r\n\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t */\r\n\tconst $getByTagName = function(tagname, namespace) {\r\n\t\treturn isUndefined(namespace) \r\n\t\t\t? new SelectionGroup(document.getElementsByTagName(tagname)) \r\n\t\t\t: new SelectionGroup(document.getElementsByTagNameNS(namespace, tagname))\r\n\t\t;\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Classes                                                        **/\r\n\t/********************************************************************/\r\n\r\n\tclass SelectionGroup extends Array {\r\n\t\tconstructor(elements, forceOne) {\r\n\t\t\tsuper();\r\n\t\t\t// Make empty if no elements.\r\n\t\t\tif (isUndefined(elements) || isNull(elements)) {\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t}\r\n\t\t\t// Wrap in one thing if not an array or list.\r\n\t\t\telse if (!!forceOne || isUndefined(elements.length)) {\r\n\t\t\t\tthis[0] = elements;\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t}\r\n\t\t\t// Else, turn into selection.\r\n\t\t\telse {\r\n\t\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\t\tthis[i] = elements[i];\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = elements.length;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Commands                                                       **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Calls a function on each element in the SelectionGroup.\r\n\t * Each element is passed to the function as [this] and the first \r\n\t * parameter (for fat-arrow lambdas that preserve [this]).\r\n\t * @param {function} func the function to call for each element.\r\n\t */\r\n\tconst $each = function(func) {\r\n\t\tfunc.apply(this, this);\r\n\t};\r\n\r\n\t/**\r\n\t * Performs a document query on the first DOM element in the SelectionGroup, \r\n\t * and returns a new SelectionGroup of the result.\r\n\t * @param {string} query the CSS/document query.\r\n\t * @param {boolean} one (optional) if true, return the first match.\r\n\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t */\r\n\tconst $search = function(query, one) {\r\n\t\treturn !!one \r\n\t\t\t? new SelectionGroup(this.querySelector(query)) \r\n\t\t\t: new SelectionGroup(this.querySelectorAll(query))\r\n\t\t;\r\n\t};\r\n\r\n\t/**\r\n\t * Gets a child of the first DOM element in the SelectionGroup.\r\n\t * @param {number} index the index of the child element to fetch.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the single child.\r\n\t */\r\n\tconst $child = function(index) {\r\n\t\treturn new SelectionGroup(this.children[index]);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all immediate children of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the children.\r\n\t */\r\n\tconst $children = function() {\r\n\t\treturn new SelectionGroup(this.children);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the immediate parent of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the parent element.\r\n\t */\r\n\tconst $parent = function() {\r\n\t\treturn new SelectionGroup(this.parentElement);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the parents of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the parent elements.\r\n\t */\r\n\tconst $ancestors = function() {\r\n\t\tlet elem = this;\r\n\t\tconst out = [];\r\n\t\twhile (elem.parentElement !== null) {\r\n\t\t\tout.push(elem.parentElement);\r\n\t\t\telem = elem.parentElement;\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all of the children and the children's children of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the descending elements.\r\n\t */\r\n\tconst $descendants = function() {\r\n\t\tconst out = [];\r\n\t\tconst childQueue = [ ...this.children];\r\n\t\twhile (childQueue.length > 0) {\r\n\t\t\tconst child = childQueue.pop();\r\n\t\t\tout.push(child);\r\n\t\t\tfor (let i = 0; i < child.children.length; i++) {\r\n\t\t\t\tchildQueue.push(child.children[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all of the siblings of first DOM element in the SelectionGroup (parent's children nminus the source element).\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the sibling elements.\r\n\t */\r\n\tconst $siblings = function() {\r\n\t\tconst out = [];\r\n\t\tconst children = [ ...this.parentElement.children];\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tconst child = children[i];\r\n\t\t\tif (child !== this)\r\n\t\t\t\tout.push(child);\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup.\r\n\t */\r\n\tconst $clear = function() {\r\n\t\twhile (this.firstChild) {\r\n\t\t\tthis.removeChild(this.firstChild);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Appends one or more child elements to all of the children in each DOM element in the SelectionGroup.\r\n\t * If elements is an array, each child in the array is appended.\r\n\t * If elements is a Document, that Document's children are appended.\r\n\t * Otherwise, elements is considered to be one element, and it is appended.\r\n\t * @param {*} elements one or more children to add.\r\n\t */\r\n\tconst $append = function(elements) {\r\n\t\tif (isArray(elements)) {\r\n\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (elements instanceof NodeList) {\r\n\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (elements instanceof Document || elements instanceof DocumentFragment) {\r\n\t\t\tfor (let i = 0; i < elements.children.length; i++) {\r\n\t\t\t\tthis.appendChild(elements.children[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.appendChild(elements);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * fills them with a new list of children.\r\n\t * Equivalent to: .clear().append(elements)\r\n\t * @param {*} elements one or more children to add.\r\n\t */\r\n\tconst $refill = function(elements) {\r\n\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * fills them with a new list of children.\r\n\t * Equivalent to: .clear().append(DOMJunk.createTemplateElements(template, model))\r\n\t * @param {Template} template the template element to use.\r\n\t * @param {Object} model the model for the template.\r\n\t */\r\n\tconst $refillTemplate = function(template, model) {\r\n\t\tif (template instanceof SelectionGroup)\r\n\t\t\ttemplate = template[0];\r\n\t\t(new SelectionGroup(this)).clear().append(DOMJunk.createTemplateElements(\r\n\t\t\ttemplate, model\r\n\t\t));\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * then, using the provided array of data, fills them with children generated\r\n\t * from the provided array.\r\n\t * If a non-truthy value is returned for an array element, it is not added.\r\n\t * @param {Array} arr the array of objects. Can be an object - they are both iterated on.\r\n\t * @param {Function} generatorFunc the element generator function. \r\n\t * \t\tFirst parameter is the array element to use, second is the array/map key.\r\n\t */\r\n\tconst $refillList = function(arr, generatorFunc) {\r\n\t\tconst elements = [];\r\n\t\teach(arr, (v, k) => {\r\n\t\t\tconst gen = generatorFunc(v, k);\r\n\t\t\tif (gen) {\r\n\t\t\t\telements.push(gen);\r\n\t\t\t}\r\n\t\t});\r\n\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets/Sets the inner HTML.\r\n\t * If HTML is provided, the inner HTML is set.\r\n\t * If it is undefined, this will return the inner HTML of the first DOM element in the SelectionGroup.\r\n\t * @param {string} data HTML data to set.\r\n\t */\r\n\tconst $html = function(data) {\r\n\t\tif (isUndefined(data)) {\r\n\t\t\treturn this.innerHTML;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.innerHTML = data;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Gets/Sets the inner text.\r\n\t * If text is provided, the inner HTML is set to the text. Special characters will be converted to entities.\r\n\t * If it is undefined, this will return the inner text of the first DOM element in the SelectionGroup.\r\n\t * @param {string} data HTML data to set.\r\n\t */\r\n\tconst $text = function(text) {\r\n\t\tif (isUndefined(text)) {\r\n\t\t\treturn this.innerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.innerHTML = HTML_ESCAPE(text);\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Sets a member on each element of the SelectionGroup to a value.\r\n\t * @param {string} memberName the member name.\r\n\t * @param {*} value the value.\r\n\t */\r\n\tconst $set = function(memberName, value) {\r\n\t\tthis[memberName] = value;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Merges several members into each object's members in the SelectionGroup.\r\n\t * @param {object} memberMap the mapping of member names to values.\r\n\t */\r\n\tconst $merge = function(memberMap) {\r\n\t\teach(memberMap, (v, k) => {\r\n\t\t\tthis[k] = v;\r\n\t\t});\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Merges a set of CSS attributes into each element's local style in the SelectionGroup, or fetches them from the first.\r\n\t * If input is undefined, this will return a copied object of this element's local styles.\r\n\t * If input is an array of CSS attribute names, this will return an object of this element's corresponding local style values.\r\n\t * If input is a CSS attribute name, this will return this element's corresponding local style values.\r\n\t * If input is an object, this sets each element's local style values to the provided CSS attribute names and values.\r\n\t * @param {*} input the input value.\r\n\t */\r\n\tconst $style = function(input) {\r\n\t\tif (isUndefined(input)) {\r\n\t\t\treturn { ...this.style };\r\n\t\t}\r\n\t\telse if (isArray(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\teach(input, (s) => {\r\n\t\t\t\tout[s] = this.style[s];\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isObject(input)) {\r\n\t\t\teach(input, (v, k) => {\r\n\t\t\t\tthis.style[k] = v;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.style[input];\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Merges a set of DOM attributes into each element's attributes in the SelectionGroup, or fetches them from the first.\r\n\t * If input is undefined, this will return an object of this element's attribute values.\r\n\t * If input is an array of attribute names, this will return an object of this element's corresponding attribute values.\r\n\t * If input is an attribute name, this will return this element's corresponding attribute value.\r\n\t * If input is an object, this sets each element's attributes to the provided corresponding values.\r\n\t * @param {*} input the input value.\r\n\t */\r\n\tconst $attr = function(input) {\r\n\t\tif (isUndefined(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\tconst names = this.getAttributeNames();\r\n\t\t\tfor (let i = 0; i < names.length; i++) {\r\n\t\t\t\tout[names[i]] = this.getAttribute(names[i]);\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isArray(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\teach(input, (a) => {\r\n\t\t\t\tout[a] = this.getAttribute(a);\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isObject(input)) {\r\n\t\t\teach(input, (v, k) => {\r\n\t\t\t\tthis.setAttribute(k, v);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getAttribute(input);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a set of CSS classes to each element in the SelectionGroup.\r\n\t * @param {string} classNames... the vararg list of class names to add to each element.\r\n\t */\r\n\tconst $classAdd = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t});\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tif (!classSet[classNames[i]]) {\r\n\t\t\t\tclasses.push(classNames[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.className = classes.join(\" \");\r\n\t};\r\n\r\n\t/**\r\n\t * Removes a set of CSS classes from each element in the SelectionGroup.\r\n\t * @param {string} classNames... the vararg list of class names to remove from each element.\r\n\t */\r\n\tconst $classRemove = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst remset = {};\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tremset[classNames[i]] = true;\r\n\t\t}\r\n\t\tconst out = [];\r\n\t\teach(classes, (c) => {\r\n\t\t\tif (!remset[c]) {\r\n\t\t\t\tout.push(c);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (isBlank(out))\r\n\t\t\tthis.removeAttribute('class');\r\n\t\telse\r\n\t\t\tthis.className = out.join(\" \");\r\n\t};\r\n\r\n\t/**\r\n\t * Toggles the presence of a set of CSS classes in each element in the SelectionGroup.\r\n\t * If the class exists, it is removed, and if the class does not exist, it is added.\r\n\t * @param {string} classNames... the vararg list of class names to toggle in each element.\r\n\t */\r\n\tconst $classToggle = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t});\r\n\t\tconst argSet = fold({}, (obj) => {\r\n\t\t\teach(classNames, (c) => {\r\n\t\t\t\tobj[c] = true;\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tconst out = [];\r\n\r\n\t\tfor (let i = 0; i < classes.length; i++) {\r\n\t\t\tconst name = classes[i];\r\n\t\t\tif (!argSet[name]) {\r\n\t\t\t\tout.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tconst name = classNames[i];\r\n\t\t\tif (!classSet[name]) {\r\n\t\t\t\tout.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isBlank(out))\r\n\t\t\tthis.removeAttribute('class');\r\n\t\telse\r\n\t\t\tthis.className = out.join(\" \");\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Scrapes a form element for its values and returns an object of the name-value pairings of the form fields,\r\n\t * or an object mapping (name/id for key).\r\n\t * The 'id' attribute is used if 'name' is not provided. Unnamed, disabled, or unchecked form elements are not scraped.\r\n\t * @param {function} callback (optional) if provided, call this function with one argument: the data returned.\r\n\t * @returns an object of the name/value pairings of the form fields, or the pass-through selection group if a callback was provided.\r\n\t */\r\n\tconst $form = function(callback) {\r\n\t\t\r\n\t\tif (!isUndefined(callback) && !isFunction(callback)) {\r\n\t\t\tthrow new Error(\"Callback function for formData must be a function!\");\r\n\t\t}\r\n\t\t\r\n\t\tconst formData = {};\r\n\r\n\t\tconst GATHERFUNC = function() {\r\n\t\t\tconst memberName = this.getAttribute('name');\r\n\t\t\tif (!!memberName) {\r\n\t\t\t\tif (!this.disabled) {\r\n\t\t\t\t\tconst t = this.getAttribute('type');\r\n\t\t\t\t\tconst v = (t === 'checkbox' || t === 'radio') \r\n\t\t\t\t\t\t? this.checked && this.value\r\n\t\t\t\t\t\t: this.value;\r\n\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\tif (isObject(formData[memberName])) {\r\n\t\t\t\t\t\t\tformData[memberName].push(v);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (formData[memberName]) {\r\n\t\t\t\t\t\t\tlet arr = [formData[memberName], v];\r\n\t\t\t\t\t\t\tformData[memberName] = arr;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tformData[memberName] = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t(new SelectionGroup(this)).search('input, textarea, select').each(GATHERFUNC);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback(formData);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn formData;\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tconst EVENTNAME = (name) => ('on' + name.toLowerCase());\r\n\r\n\t/**\r\n\t * Attaches a function to a DOM element event handler (the \"on\" members).\r\n\t * The function attached is wrapped in a different function that\r\n\t * parses out the event target and passes it to the function as [this].\r\n\t * @param {string} eventName the event name (for example, if \"mouseover\", attaches to \"onmouseover\").\r\n\t * @param {Function} func the function to wrap (the function's [this] becomes the element, and the function's first arg is the event. Cannot be a lambda closure).\r\n\t */\r\n\tconst $attach = function(eventName, func) {\r\n\t\tconst self = this;\r\n\t\tthis[EVENTNAME(eventName)] = func ? function(event) {\r\n\t\t\tfunc.apply(self, [event]);\r\n\t\t} : null;\r\n\t};\r\n\r\n\t/**\r\n\t * Detaches a function from a DOM element event handler (the \"on\" members).\r\n\t * @param {string} eventName the event name (for example, if \"mouseover\", nullifies \"onmouseover\").\r\n\t */\r\n\tconst $detach = function(eventName) {\r\n\t\tthis[EVENTNAME(eventName)] = null;\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Wraps a single element in the SelectionGroup in a new SelectionGroup.\r\n\t * @param {number} index the index of the selected element.\r\n\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t */\r\n\tconst $get = function(index) {\r\n\t\treturn new SelectionGroup(this[index]);\r\n\t};\r\n\r\n\t/**\r\n\t * Wraps the first element in the SelectionGroup in a new SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t */\r\n\tconst $first = function() {\r\n\t\treturn new SelectionGroup(this[0]);\r\n\t};\r\n\r\n\t/**\r\n\t * Wraps the last element in the SelectionGroup in a new SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t */\r\n\tconst $last = function() {\r\n\t\treturn new SelectionGroup(this[this.length - 1]);\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Takes a single object where the keys are selector queries to run via .search() and\r\n\t * corresponding values are functions to call on the selection results via .each().\r\n\t * @param {Object} selectorMap the mapping of selector strings to functions.\r\n\t */\r\n\tconst $apply = function(selectorMap) {\r\n\t\teach(selectorMap, (v, k) => {\r\n\t\t\tthis.search(k).each(v);\r\n\t\t});\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Exported                                                       **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Performs a document query, returning the list of matches as a SelectionGroup.\r\n\t * If the first argument is undefined or null, an empty SelectionGroup is returned.\r\n\t * If the first argument is a string, it is treated as a CSS selector, and the elements that match are in the SelectionGroup. \r\n\t * Anything else, and the SelectionGroup contains that object, or treats it like a group if it is an array.\r\n\t * @param {*} query the CSS/document query.\r\n\t * @param {boolean} one (optional) if true, and CSS selector, return only the first match.\r\n\t * @returns {SelectionGroup} the matching elements, encapsulated.\r\n\t */\r\n\tconst DOMJunk = new function() {\r\n\t\treturn function(query, one) {\r\n\t\t\tif (isUndefined(query) || isNull(query)) {\r\n\t\t\t\treturn new SelectionGroup([]);\r\n\t\t\t}\r\n\t\t\telse if (isString(query)) {\r\n\t\t\t\treturn !!one \r\n\t\t\t\t\t? new SelectionGroup(document.querySelector(query))\r\n\t\t\t\t\t: new SelectionGroup(document.querySelectorAll(query))\r\n\t\t\t\t;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn new SelectionGroup(query)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t * The function's [this] keyword becomes each element.\r\n\t * When the function is called, it is called once per element, unless the function returns a value.\r\n\t * If the function returns a value (not undefined), it is returned as the result.\r\n\t * If it never returned a function, the SelectionGroup instance is returned as the result.\r\n\t * @param {string} name the name of the function to add to all query results.\r\n\t * @param {Function} func the function itself (cannot be a lambda closure).\r\n\t */\r\n\tDOMJunk.extend = function(name, func) {\r\n\t\tif (SelectionGroup.prototype[name]) {\r\n\t\t\tconsole.warn('DOMJunk: Overriding existing function: ' + name);\r\n\t\t}\r\n\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\tlet retval;\r\n\t\t\tfor (let i = 0; i < this.length && isUndefined(retval); i++) {\r\n\t\t\t\tretval = func.apply(this[i], arguments);\r\n\t\t\t}\r\n\t\t\treturn isUndefined(retval) ? this : retval;\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t * The function's [this] keyword becomes the SelectionGroup itself.\r\n\t * @param {string} name the name of the function to add.\r\n\t * @param {Function} func the function to add (cannot be a lambda closure).\r\n\t */\r\n\tDOMJunk.extendSelection = function(name, func) {\r\n\t\tif (SelectionGroup.prototype[name]) {\r\n\t\t\tconsole.warn('DOMJunk: Overriding existing function: ' + name);\r\n\t\t}\r\n\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\treturn func.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Auto-selects a series of selection groups using an object that maps\r\n\t * member name to selector query or function that returns a SelectionGroup.\r\n\t * @param {Object} memberSet a map of member name to selector.\r\n\t * \t\tIf the selector is a string, it is used as a selector to build the group.\r\n\t * \t\tElse if it's a function, it is called to return the member's value.\r\n\t * \t\tElse, it is the member's value.\r\n\t * @returns {Object} a new object that is a mapping of name to SelectionGroup.\r\n\t */\r\n\tDOMJunk.createGroups = function(memberSet) {\r\n\t\tconst out = {};\r\n\t\teach(memberSet, (selector, memberName) => {\r\n\t\t\tlet value = null;\r\n\t\t\tif (isString(selector)) {\r\n\t\t\t\tvalue = DOMJunk(selector);\r\n\t\t\t} else if (isFunction(selector)) {\r\n\t\t\t\tvalue = selector();\r\n\t\t\t} else {\r\n\t\t\t\tvalue = selector;\r\n\t\t\t}\r\n\r\n\t\t\tout[memberName] = value;\r\n\t\t});\r\n\t\treturn out;\r\n\t};\r\n\r\n\t/**\r\n\t * Creates one or more elements from a template element, applying a model to\r\n\t * it, and returning a generated element. The template content is assumed to have\r\n\t * \"handlebar\" tokens in them (\"{{tokenName}}\") that contain the name of the member to resolve\r\n\t * in the model.\r\n\t * @param {Object} model a model to use for filling the template.\r\n\t * \t\tIf model is an Array, multiple templates are made and returned.\r\n\t * @returns {Array} an array of generated elements.\r\n\t */\r\n\tDOMJunk.createTemplateElements = function(templateElement, model) {\r\n\t\tconst templateData = document.importNode(templateElement, true);\r\n\t\tconst templateContent = templateData.innerHTML.trim();\r\n\r\n\t\tconst _GENERATEELEMENT = (modelObject) => {\r\n\t\t\tconst matches = templateContent.match(/{{.+?}}/g);\r\n\t\t\tlet lastSearchIndex = 0;\r\n\t\t\tlet outHTML = '';\r\n\t\t\tif (matches) {\r\n\t\t\t\tfor (let i = 0; i < matches.length; i++) {\r\n\t\t\t\t\tconst token = matches[i]; // has handlebars\r\n\t\t\t\t\tlet matchIndex = templateContent.indexOf(token, lastSearchIndex);\r\n\t\t\t\t\tif (matchIndex >= 0) {\r\n\t\t\t\t\t\toutHTML += templateContent.substring(lastSearchIndex, matchIndex);\r\n\t\t\t\t\t\tconst expression = token.substring(2, token.length - 2);\r\n\t\t\t\t\t\tconst result = modelObject[expression];\r\n\t\t\t\t\t\tif (!isUndefined(result)) {\r\n\t\t\t\t\t\t\toutHTML += isNull(result) ? '' : HTML_ESCAPE(result.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastSearchIndex = matchIndex + token.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\toutHTML += templateContent.substring(lastSearchIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn createHTML(outHTML);\r\n\t\t};\r\n\r\n\t\tconst generated = [];\r\n\t\tif (isArray(model)) {\r\n\t\t\teach(model, (m) => {\r\n\t\t\t\teach (_GENERATEELEMENT(m), (e) => {\r\n\t\t\t\t\tgenerated.push(e);\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\treturn generated;\r\n\t\t}\r\n\t\telse {\r\n\t\t\teach (_GENERATEELEMENT(model), (e) => {\r\n\t\t\t\tgenerated.push(e);\r\n\t\t\t})\r\n\t\t\treturn generated;\r\n\t\t}\r\n\t};\r\n\r\n\t\r\n\t/********************************************************************/\r\n\r\n\tDOMJunk.extend('each', $each);\r\n\tDOMJunk.extend('search', $search);\r\n\tDOMJunk.extend('child', $child);\r\n\tDOMJunk.extend('children', $children);\r\n\tDOMJunk.extend('parent', $parent);\r\n\tDOMJunk.extend('ancestors', $ancestors);\r\n\tDOMJunk.extend('descendants', $descendants);\r\n\tDOMJunk.extend('siblings', $siblings);\r\n\r\n\tDOMJunk.extend('clear', $clear);\r\n\tDOMJunk.extend('append', $append);\r\n\tDOMJunk.extend('refill', $refill);\r\n\tDOMJunk.extend('refillTemplate', $refillTemplate);\r\n\tDOMJunk.extend('refillList', $refillList);\r\n\tDOMJunk.extend('html', $html);\r\n\tDOMJunk.extend('text', $text);\r\n\r\n\tDOMJunk.extend('set', $set);\r\n\tDOMJunk.extend('merge', $merge);\r\n\r\n\tDOMJunk.extend('style', $style);\r\n\tDOMJunk.extend('attr', $attr);\r\n\tDOMJunk.extend('classAdd', $classAdd);\r\n\tDOMJunk.extend('classRemove', $classRemove);\r\n\tDOMJunk.extend('classToggle', $classToggle);\r\n\r\n\tDOMJunk.extend('attach', $attach);\r\n\tDOMJunk.extend('detach', $detach);\r\n\r\n\tDOMJunk.extendSelection('get', $get);\r\n\tDOMJunk.extendSelection('first', $first);\r\n\tDOMJunk.extendSelection('last', $last);\r\n\tDOMJunk.extendSelection('form', $form);\r\n\tDOMJunk.extendSelection('apply', $apply);\r\n\r\n\tconst wrapAttach = function(attachName) {\r\n\t\treturn function(func) { \r\n\t\t\tthis.attach(attachName, func); \r\n\t\t};\r\n\t}\r\n\r\n\tDOMJunk.extendSelection('load',     wrapAttach('load'));\r\n\tDOMJunk.extendSelection('unload',   wrapAttach('unload'));\r\n\tDOMJunk.extendSelection('click',    wrapAttach('click'));\r\n\tDOMJunk.extendSelection('dblclick', wrapAttach('dblclick'));\r\n\tDOMJunk.extendSelection('hover',    wrapAttach('mouseenter'));\r\n\tDOMJunk.extendSelection('leave',    wrapAttach('mouseleave'));\r\n\tDOMJunk.extendSelection('keydown',  wrapAttach('keydown'));\r\n\tDOMJunk.extendSelection('keyup',    wrapAttach('keyup'));\r\n\tDOMJunk.extendSelection('focus',    wrapAttach('focus'));\r\n\tDOMJunk.extendSelection('blur',     wrapAttach('blur'));\r\n\tDOMJunk.extendSelection('change',   wrapAttach('change'));\r\n\r\n\tDOMJunk.id =    $getById;\r\n\tDOMJunk.class = $getByClassName;\r\n\tDOMJunk.tag =   $getByTagName;\r\n\r\n\tDOMJunk.each = each;\r\n\tDOMJunk.fold = fold;\r\n\tDOMJunk.queryString = queryString;\r\n\r\n\tDOMJunk.isType = isType;\r\n\tDOMJunk.isUndefined = isUndefined;\r\n\tDOMJunk.isNull = isNull;\r\n\tDOMJunk.isBoolean = isBoolean;\r\n\tDOMJunk.isNumber = isNumber;\r\n\tDOMJunk.isString = isString;\r\n\tDOMJunk.isArray = isArray;\r\n\tDOMJunk.isFunction = isFunction;\r\n\tDOMJunk.isObject = isObject;\r\n\tDOMJunk.isBlank = isBlank;\r\n\tDOMJunk.html = createHTML;\r\n\tDOMJunk.e = createElement;\r\n\tDOMJunk.t = createText;\r\n\r\n\t/********************************************************************/\r\n\r\n\tlet old$DJAssignment     = CTX.$DJ;\r\n\tlet old$DJMainAssignment = CTX.$DJMain;\r\n\r\n\t/**\r\n\t * Restores the previous assigment of '$DJ' and '$DJMain' at load.\r\n\t */\r\n\tDOMJunk.noConflict = function() {\r\n\t\tCTX.$DJ     = old$DJAssignment;\r\n\t\tCTX.$DJMain = old$DJMainAssignment;\r\n\t};\r\n\t\r\n\tCTX.DOMJunk = DOMJunk;\r\n\tCTX.$DJ     = DOMJunk;\r\n\tCTX.$DJMain = function(func) { \r\n\t\tDOMJunk.tag('body').load(func); \r\n\t};\r\n\r\n\t/**\r\n\t TODO: Add stuff, maybe.\r\n\t\tFormValidate\r\n\t\tFormFill\r\n\t*/\r\n\r\n})(this);\r\n"],"names":["CTX","Element","console","error","document","querySelectorAll","querySelector","createElement","createTextNode","prototype","isBoolean","obj","isType","isFunction","isObject","isBlank","isUndefined","isNull","isArray","length","isNumber","isNaN","isString","trim","each","list","func","let","x","hasOwnProperty","fold","type","Object","toString","call","createHTML","html","outElement","innerHTML","content","childNodes","ENTITIES","&","<",">","\"","'","/","`","=","HTML_SPECIAL","HTML_ESCAPE","input","replace","m","SelectionGroup","Array","constructor","elements","forceOne","super","this","i","EVENTNAME","name","toLowerCase","DOMJunk","query","one","extend","warn","retval","apply","arguments","extendSelection","createGroups","memberSet","out","selector","memberName","value","createTemplateElements","templateElement","model","templateContent","importNode","_GENERATEELEMENT","matches","match","lastSearchIndex","outHTML","result","token","matchIndex","indexOf","substring","modelObject","generated","push","e","index","children","parentElement","elem","childQueue","child","pop","firstChild","removeChild","appendChild","NodeList","Document","DocumentFragment","clear","append","template","arr","generatorFunc","v","k","gen","data","text","innerText","memberMap","style","s","names","getAttributeNames","getAttribute","a","setAttribute","classNames","classes","className","split","classSet","map","c","join","remset","removeAttribute","argSet","eventName","self","event","callback","Error","formData","search","disabled","t","checked","selectorMap","wrapAttach","attachName","attach","id","getElementById","class","classname","getElementsByClassName","tag","tagname","namespace","getElementsByTagName","getElementsByTagNameNS","queryString","accum","key","encodeURIComponent","attribs","attrObj","createAttribute","setAttributeNode","old$DJAssignment","$DJ","old$DJMainAssignment","$DJMain","noConflict","load"],"mappings":"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"}