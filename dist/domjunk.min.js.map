{"version":3,"sources":["STDIN"],"sourcesContent":["/****************************************************************************\r\n * DOMJunk by Matt Tropiano (C) 2021\r\n * Requires ECMAScript 6\r\n * Licensed for use under the MIT License\r\n * @license\r\n ****************************************************************************/\r\n(function(CTX){\r\n\t\r\n\t/********************************************************************/\r\n\t/** Test Browser Capabilities                                      **/\r\n\t/********************************************************************/\r\n\r\n\tif (!CTX.Element) {\r\n\t\tconsole.error(\"Missing required type: Element.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: document.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.querySelector) {\r\n\t\tconsole.error(\"Missing required function: document.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.createElement) {\r\n\t\tconsole.error(\"Missing required function: document.createElement.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.document.createTextNode) {\r\n\t\tconsole.error(\"Missing required function: document.createTextNode.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelectorAll) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelectorAll.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!CTX.Element.prototype.querySelector) {\r\n\t\tconsole.error(\"Missing required function: Element.querySelector.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Utilities                                                      **/\r\n\t/********************************************************************/\r\n\r\n\tconst isType = function(obj, type) {\r\n\t\treturn Object.prototype.toString.call(obj) === '[object '+type+']';\r\n\t};\r\n\r\n\tconst isUndefined = function(obj) {\r\n\t\treturn (typeof obj) === 'undefined';\r\n\t};\r\n\r\n\tconst isNull = function(obj) {\r\n\t\treturn obj === null;\r\n\t};\r\n\r\n\tconst isBoolean = function(obj) {\r\n\t\treturn isType(obj, 'Boolean');\r\n\t};\r\n\r\n\tconst isNumber = function(obj) {\r\n\t\treturn isType(obj, 'Number');\r\n\t};\r\n\r\n\tconst isString = function(obj) {\r\n\t\treturn isType(obj, 'String');\r\n\t};\r\n\r\n\tconst isArray = function(obj) {\r\n\t\treturn isType(obj, 'Array');\r\n\t};\r\n\r\n\tconst isFunction = function(obj) {\r\n\t\treturn isType(obj, 'Function');\r\n\t};\r\n\r\n\tconst isObject = function(obj) {\r\n\t\treturn isType(obj, 'Object');\r\n\t};\r\n\r\n\tconst isBlank = function(obj) {\r\n\t\treturn (\r\n\t\t\t\tisUndefined(obj)\r\n\t\t\t|| isNull(obj) \r\n\t\t\t|| (isArray(obj) && obj.length === 0) \r\n\t\t\t|| (isNumber(obj) && isNaN(obj)) \r\n\t\t\t|| (isString(obj) && obj.trim().length === 0)\r\n\t\t\t|| obj === 0 \r\n\t\t);\r\n\t};\r\n\t\r\n\tconst each = function(list, func) {\r\n\t\tif (isUndefined(list) || isNull(list)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (isBoolean(list) || isNumber(list) || isString(list)) {\r\n\t\t\tfunc(list, null, 1);\r\n\t\t}\r\n\t\telse if (isArray(list)) {\r\n\t\t\tfor (let i = 0; i < list.length; i++) {\r\n\t\t\t\tif (func(list[i], i, list.length))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let x in list) if (list.hasOwnProperty(x)) {\r\n\t\t\t\tif (func(list[x], x, list.length))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst fold = function(obj, func) {\r\n\t\tfunc(obj);\r\n\t\treturn obj;\r\n\t};\r\n\r\n\tconst queryString = function(map) {\r\n\t\tlet accum = [];\r\n\t\teach(map, (value, key) => {\r\n\t\t\tif (isArray(value)) {\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\taccum.push(\r\n\t\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!isUndefined(value) && !isNull(value)) {\r\n\t\t\t\taccum.push(\r\n\t\t\t\t\tencodeURIComponent(key) + '=' + encodeURIComponent(value)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn accum.join('&');\r\n\t};\r\n\t\r\n\tconst createHTML = function(html) {\r\n\t\tconst outElement = document.createElement('template');\r\n\t\toutElement.innerHTML = html;\r\n\t\treturn outElement.content.childNodes;\r\n\t};\r\n\r\n\tconst createElement = function(name, attribs, children) {\r\n\t\tconst out = document.createElement(name);\r\n\t\tif (attribs) each(attribs, (v, k) => {\r\n\t\t\tconst attrObj = document.createAttribute(k);\r\n\t\t\tattrObj.value = v;\r\n\t\t\tout.setAttributeNode(attrObj);\r\n\t\t});\r\n\r\n\t\tif (children) {\r\n\t\t\tif (isArray(children)) {\r\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\t\t\tout.appendChild(children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout.appendChild(children);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn out;\r\n\t};\r\n\r\n\tconst createText = function(data) {\r\n\t\treturn document.createTextNode(data);\r\n\t};\r\n\r\n\tconst ENTITIES = {\r\n\t\t'&': '&amp;',\r\n\t\t'<': '&lt;',\r\n\t\t'>': '&gt;',\r\n\t\t'\"': '&quot;',\r\n\t\t\"'\": '&#39;',\r\n\t\t'/': '&#x2F;',\r\n\t\t'`': '&#x60;',\r\n\t\t'=': '&#x3D;'\r\n\t};\r\n\t\r\n\tconst HTML_SPECIAL = /&|\\<|\\>|\\\"|\\'|\\/|`|=/g;\r\n\r\n\tconst HTML_ESCAPE = (input) => input.replace(HTML_SPECIAL, (m) => ENTITIES[m]);\r\n\r\n\t/********************************************************************/\r\n\t/** Other Getters                                                  **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Fetches an element by its id attribute and wraps it in a SelectionGroup.\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} id the id.\r\n\t * @returns {SelectionGroup} the corresponding element in a SelectionGroup, or empty group if no element.\r\n\t */\r\n\tconst $getById = function(id) {\r\n\t\treturn new SelectionGroup(document.getElementById(id));\r\n\t};\r\n\r\n\t/**\r\n\t * Fetches a group of elements by an associated class name.\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} classname the class name.\r\n\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t */\r\n\tconst $getByClassName = function(classname) {\r\n\t\treturn new SelectionGroup(document.getElementsByClassName(classname));\r\n\t};\r\n\r\n\t/**\r\n\t * Fetches a group of elements by an associated tag name (and optional namespace).\r\n\t * In most cases, this is more performant than a CSS query.\r\n\t * @param {string} tagname the tag name.\r\n\t * @param {string} namespace (optional) the tag namespace.\r\n\t * @returns {SelectionGroup} the corresponding elements in a SelectionGroup, or empty group if no elements.\r\n\t */\r\n\tconst $getByTagName = function(tagname, namespace) {\r\n\t\treturn isUndefined(namespace) \r\n\t\t\t? new SelectionGroup(document.getElementsByTagName(tagname)) \r\n\t\t\t: new SelectionGroup(document.getElementsByTagNameNS(namespace, tagname))\r\n\t\t;\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Classes                                                        **/\r\n\t/********************************************************************/\r\n\r\n\tclass SelectionGroup extends Array {\r\n\t\tconstructor(elements, forceOne) {\r\n\t\t\tsuper();\r\n\t\t\t// Make empty if no elements.\r\n\t\t\tif (isUndefined(elements) || isNull(elements)) {\r\n\t\t\t\tthis.length = 0;\r\n\t\t\t}\r\n\t\t\t// Wrap in one thing if not an array or list.\r\n\t\t\telse if (!!forceOne || isUndefined(elements.length)) {\r\n\t\t\t\tthis[0] = elements;\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t}\r\n\t\t\t// Else, turn into selection.\r\n\t\t\telse {\r\n\t\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\t\tthis[i] = elements[i];\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = elements.length;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Commands                                                       **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Calls a function on each element in the SelectionGroup.\r\n\t * Each element is passed to the function as [this] and the first \r\n\t * parameter (for fat-arrow lambdas that preserve [this]).\r\n\t * @param {function} func the function to call for each element.\r\n\t */\r\n\tconst $each = function(func) {\r\n\t\tfunc.apply(this, [this]);\r\n\t};\r\n\r\n\t/**\r\n\t * Performs a document query on the first DOM element in the SelectionGroup, \r\n\t * and returns a new SelectionGroup of the result.\r\n\t * @param {string} query the CSS/document query.\r\n\t * @param {boolean} one (optional) if true, return the first match.\r\n\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t */\r\n\tconst $search = function(query, one) {\r\n\t\treturn !!one \r\n\t\t\t? new SelectionGroup(this.querySelector(query)) \r\n\t\t\t: new SelectionGroup(this.querySelectorAll(query))\r\n\t\t;\r\n\t};\r\n\r\n\t/**\r\n\t * Gets a child of the first DOM element in the SelectionGroup.\r\n\t * @param {number} index the index of the child element to fetch.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the single child.\r\n\t */\r\n\tconst $child = function(index) {\r\n\t\treturn new SelectionGroup(this.children[index]);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all immediate children of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the children.\r\n\t */\r\n\tconst $children = function() {\r\n\t\treturn new SelectionGroup(this.children);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the immediate parent of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the parent element.\r\n\t */\r\n\tconst $parent = function() {\r\n\t\treturn new SelectionGroup(this.parentElement);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the parents of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the parent elements.\r\n\t */\r\n\tconst $ancestors = function() {\r\n\t\tlet elem = this;\r\n\t\tconst out = [];\r\n\t\twhile (elem.parentElement !== null) {\r\n\t\t\tout.push(elem.parentElement);\r\n\t\t\telem = elem.parentElement;\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all of the children and the children's children of the first DOM element in the SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the descending elements.\r\n\t */\r\n\tconst $descendants = function() {\r\n\t\tconst out = [];\r\n\t\tconst childQueue = [ ...this.children];\r\n\t\twhile (childQueue.length > 0) {\r\n\t\t\tconst child = childQueue.pop();\r\n\t\t\tout.push(child);\r\n\t\t\tfor (let i = 0; i < child.children.length; i++) {\r\n\t\t\t\tchildQueue.push(child.children[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets all of the siblings of first DOM element in the SelectionGroup (parent's children nminus the source element).\r\n\t * @returns {SelectionGroup} the new SelectionGroup with the sibling elements.\r\n\t */\r\n\tconst $siblings = function() {\r\n\t\tconst out = [];\r\n\t\tconst children = [ ...this.parentElement.children];\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tconst child = children[i];\r\n\t\t\tif (child !== this)\r\n\t\t\t\tout.push(child);\r\n\t\t}\r\n\t\treturn new SelectionGroup(out);\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup.\r\n\t */\r\n\tconst $clear = function() {\r\n\t\twhile (this.firstChild) {\r\n\t\t\tthis.removeChild(this.firstChild);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Appends one or more child elements to all of the children in each DOM element in the SelectionGroup.\r\n\t * If elements is an array, each child in the array is appended.\r\n\t * If elements is a Document, that Document's children are appended.\r\n\t * Otherwise, elements is considered to be one element, and it is appended.\r\n\t * @param {*} elements one or more children to add.\r\n\t */\r\n\tconst $append = function(elements) {\r\n\t\tif (isArray(elements)) {\r\n\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (elements instanceof NodeList) {\r\n\t\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\tthis.appendChild(elements[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (elements instanceof Document || elements instanceof DocumentFragment) {\r\n\t\t\tfor (let i = 0; i < elements.children.length; i++) {\r\n\t\t\t\tthis.appendChild(elements.children[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.appendChild(elements);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * fills them with a new list of children.\r\n\t * Equivalent to: .clear().append(elements)\r\n\t * @param {*} elements one or more children to add.\r\n\t */\r\n\tconst $refill = function(elements) {\r\n\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * fills them with a new list of children.\r\n\t * Equivalent to: .clear().append(DOMJunk.createTemplateElements(template, model))\r\n\t * @param {Template} template the template element to use.\r\n\t * @param {Object} model the model for the template.\r\n\t */\r\n\tconst $refillTemplate = function(template, model) {\r\n\t\tif (template instanceof SelectionGroup)\r\n\t\t\ttemplate = template[0];\r\n\t\t(new SelectionGroup(this)).clear().append(DOMJunk.createTemplateElements(\r\n\t\t\ttemplate, model\r\n\t\t));\r\n\t};\r\n\r\n\t/**\r\n\t * Removes all of the children in each DOM element in the SelectionGroup, and\r\n\t * then, using the provided array of data, fills them with children generated\r\n\t * from the provided array.\r\n\t * If a non-truthy value is returned for an array element, it is not added.\r\n\t * @param {Array} arr the array of objects. Can be an object - they are both iterated on.\r\n\t * @param {Function} generatorFunc the element generator function. \r\n\t * \t\tFirst parameter is the array element to use, second is the array/map key.\r\n\t */\r\n\tconst $refillList = function(arr, generatorFunc) {\r\n\t\tconst elements = [];\r\n\t\teach(arr, (v, k) => {\r\n\t\t\tconst gen = generatorFunc(v, k);\r\n\t\t\tif (gen) {\r\n\t\t\t\telements.push(gen);\r\n\t\t\t}\r\n\t\t});\r\n\t\t(new SelectionGroup(this)).clear().append(elements);\r\n\t};\r\n\r\n\t/**\r\n\t * Gets/Sets the inner HTML.\r\n\t * If HTML is provided, the inner HTML is set.\r\n\t * If it is undefined, this will return the inner HTML of the first DOM element in the SelectionGroup.\r\n\t * @param {string} data HTML data to set.\r\n\t */\r\n\tconst $html = function(data) {\r\n\t\tif (isUndefined(data)) {\r\n\t\t\treturn this.innerHTML;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.innerHTML = data;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Gets/Sets the inner text.\r\n\t * If text is provided, the inner HTML is set to the text. Special characters will be converted to entities.\r\n\t * If it is undefined, this will return the inner text of the first DOM element in the SelectionGroup.\r\n\t * @param {string} data HTML data to set.\r\n\t */\r\n\tconst $text = function(text) {\r\n\t\tif (isUndefined(text)) {\r\n\t\t\treturn this.innerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.innerHTML = HTML_ESCAPE(text);\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Sets a member on each element of the SelectionGroup to a value.\r\n\t * @param {string} memberName the member name.\r\n\t * @param {*} value the value.\r\n\t */\r\n\tconst $set = function(memberName, value) {\r\n\t\tthis[memberName] = value;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Merges several members into each object's members in the SelectionGroup.\r\n\t * @param {object} memberMap the mapping of member names to values.\r\n\t */\r\n\tconst $merge = function(memberMap) {\r\n\t\teach(memberMap, (v, k) => {\r\n\t\t\tthis[k] = v;\r\n\t\t});\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Merges a set of CSS attributes into each element's local style in the SelectionGroup, or fetches them from the first.\r\n\t * If input is undefined, this will return a copied object of this element's local styles.\r\n\t * If input is an array of CSS attribute names, this will return an object of this element's corresponding local style values.\r\n\t * If input is a CSS attribute name, this will return this element's corresponding local style values.\r\n\t * If input is an object, this sets each element's local style values to the provided CSS attribute names and values.\r\n\t * @param {*} input the input value.\r\n\t */\r\n\tconst $style = function(input) {\r\n\t\tif (isUndefined(input)) {\r\n\t\t\treturn { ...this.style };\r\n\t\t}\r\n\t\telse if (isArray(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\teach(input, (s) => {\r\n\t\t\t\tout[s] = this.style[s];\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isObject(input)) {\r\n\t\t\teach(input, (v, k) => {\r\n\t\t\t\tthis.style[k] = v;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.style[input];\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Merges a set of DOM attributes into each element's attributes in the SelectionGroup, or fetches them from the first.\r\n\t * If input is undefined, this will return an object of this element's attribute values.\r\n\t * If input is an array of attribute names, this will return an object of this element's corresponding attribute values.\r\n\t * If input is an attribute name, this will return this element's corresponding attribute value.\r\n\t * If input is an object, this sets each element's attributes to the provided corresponding values.\r\n\t * @param {*} input the input value.\r\n\t */\r\n\tconst $attr = function(input) {\r\n\t\tif (isUndefined(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\tconst names = this.getAttributeNames();\r\n\t\t\tfor (let i = 0; i < names.length; i++) {\r\n\t\t\t\tout[names[i]] = this.getAttribute(names[i]);\r\n\t\t\t}\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isArray(input)) {\r\n\t\t\tlet out = {};\r\n\t\t\teach(input, (a) => {\r\n\t\t\t\tout[a] = this.getAttribute(a);\r\n\t\t\t});\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (isObject(input)) {\r\n\t\t\teach(input, (v, k) => {\r\n\t\t\t\tthis.setAttribute(k, v);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getAttribute(input);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a set of CSS classes to each element in the SelectionGroup.\r\n\t * @param {string} classNames... the vararg list of class names to add to each element.\r\n\t */\r\n\tconst $classAdd = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t});\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tif (!classSet[classNames[i]]) {\r\n\t\t\t\tclasses.push(classNames[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.className = classes.join(\" \");\r\n\t};\r\n\r\n\t/**\r\n\t * Removes a set of CSS classes from each element in the SelectionGroup.\r\n\t * @param {string} classNames... the vararg list of class names to remove from each element.\r\n\t */\r\n\tconst $classRemove = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst remset = {};\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tremset[classNames[i]] = true;\r\n\t\t}\r\n\t\tconst out = [];\r\n\t\teach(classes, (c) => {\r\n\t\t\tif (!remset[c]) {\r\n\t\t\t\tout.push(c);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (isBlank(out))\r\n\t\t\tthis.removeAttribute('class');\r\n\t\telse\r\n\t\t\tthis.className = out.join(\" \");\r\n\t};\r\n\r\n\t/**\r\n\t * Toggles the presence of a set of CSS classes in each element in the SelectionGroup.\r\n\t * If the class exists, it is removed, and if the class does not exist, it is added.\r\n\t * @param {string} classNames... the vararg list of class names to toggle in each element.\r\n\t */\r\n\tconst $classToggle = function(/* classNames... */) {\r\n\t\tconst classNames = arguments;\r\n\t\tconst classes = this.className.trim().length > 0 ? this.className.split(/\\s+/) : [];\r\n\t\tconst classSet = fold({}, (obj) => {\r\n\t\t\tclasses.map((c) => {obj[c] = true;});\r\n\t\t});\r\n\t\tconst argSet = fold({}, (obj) => {\r\n\t\t\teach(classNames, (c) => {\r\n\t\t\t\tobj[c] = true;\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tconst out = [];\r\n\r\n\t\tfor (let i = 0; i < classes.length; i++) {\r\n\t\t\tconst name = classes[i];\r\n\t\t\tif (!argSet[name]) {\r\n\t\t\t\tout.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < classNames.length; i++) {\r\n\t\t\tconst name = classNames[i];\r\n\t\t\tif (!classSet[name]) {\r\n\t\t\t\tout.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isBlank(out))\r\n\t\t\tthis.removeAttribute('class');\r\n\t\telse\r\n\t\t\tthis.className = out.join(\" \");\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Scrapes a form element for its values and returns an object of the name-value pairings of the form fields,\r\n\t * or an object mapping (name/id for key).\r\n\t * The 'id' attribute is used if 'name' is not provided. Unnamed, disabled, or unchecked form elements are not scraped.\r\n\t * @param {function} callback (optional) if provided, call this function with one argument: the data returned.\r\n\t * @returns an object of the name/value pairings of the form fields, or the pass-through selection group if a callback was provided.\r\n\t */\r\n\tconst $form = function(callback) {\r\n\t\t\r\n\t\tif (!isUndefined(callback) && !isFunction(callback)) {\r\n\t\t\tthrow new Error(\"Callback function for formData must be a function!\");\r\n\t\t}\r\n\t\t\r\n\t\tconst formData = {};\r\n\r\n\t\tconst GATHERFUNC = function() {\r\n\t\t\tconst memberName = this.getAttribute('name');\r\n\t\t\tif (!!memberName) {\r\n\t\t\t\tif (!this.disabled) {\r\n\t\t\t\t\tconst t = this.getAttribute('type');\r\n\t\t\t\t\tconst v = (t === 'checkbox' || t === 'radio') \r\n\t\t\t\t\t\t? this.checked && this.value\r\n\t\t\t\t\t\t: this.value;\r\n\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\tif (isObject(formData[memberName])) {\r\n\t\t\t\t\t\t\tformData[memberName].push(v);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (formData[memberName]) {\r\n\t\t\t\t\t\t\tlet arr = [formData[memberName], v];\r\n\t\t\t\t\t\t\tformData[memberName] = arr;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tformData[memberName] = v;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t(new SelectionGroup(this)).search('input, textarea, select').each(GATHERFUNC);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback(formData);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn formData;\r\n\t\t}\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tconst EVENTNAME = (name) => ('on' + name.toLowerCase());\r\n\r\n\t/**\r\n\t * Attaches a function to a DOM element event handler (the \"on\" members).\r\n\t * The function attached is wrapped in a different function that\r\n\t * parses out the event target and passes it to the function as [this].\r\n\t * @param {string} eventName the event name (for example, if \"mouseover\", attaches to \"onmouseover\").\r\n\t * @param {Function} func the function to wrap (the function's [this] becomes the element, and the function's first arg is the event. Cannot be a lambda closure).\r\n\t */\r\n\tconst $attach = function(eventName, func) {\r\n\t\tconst self = this;\r\n\t\tthis[EVENTNAME(eventName)] = func ? function(event) {\r\n\t\t\tfunc.apply(self, [event]);\r\n\t\t} : null;\r\n\t};\r\n\r\n\t/**\r\n\t * Detaches a function from a DOM element event handler (the \"on\" members).\r\n\t * @param {string} eventName the event name (for example, if \"mouseover\", nullifies \"onmouseover\").\r\n\t */\r\n\tconst $detach = function(eventName) {\r\n\t\tthis[EVENTNAME(eventName)] = null;\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Wraps a single element in the SelectionGroup in a new SelectionGroup.\r\n\t * @param {number} index the index of the selected element.\r\n\t * @returns {SelectionGroup} the new SelectionGroup of matching elements.\r\n\t */\r\n\tconst $get = function(index) {\r\n\t\treturn new SelectionGroup(this[index]);\r\n\t};\r\n\r\n\t/**\r\n\t * Wraps the first element in the SelectionGroup in a new SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t */\r\n\tconst $first = function() {\r\n\t\treturn new SelectionGroup(this[0]);\r\n\t};\r\n\r\n\t/**\r\n\t * Wraps the last element in the SelectionGroup in a new SelectionGroup.\r\n\t * @returns {SelectionGroup} the new SelectionGroup.\r\n\t */\r\n\tconst $last = function() {\r\n\t\treturn new SelectionGroup(this[this.length - 1]);\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Takes a single object where the keys are selector queries to run via .search() and\r\n\t * corresponding values are functions to call on the selection results via .each().\r\n\t * @param {Object} selectorMap the mapping of selector strings to functions.\r\n\t */\r\n\tconst $apply = function(selectorMap) {\r\n\t\teach(selectorMap, (v, k) => {\r\n\t\t\tthis.search(k).each(v);\r\n\t\t});\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Unwraps a query, returning every element in the query as-is.\r\n\t * @returns {Array} the array of elements. \r\n\t */\r\n\tconst $elements = function() {\r\n\t\treturn [ ...this];\r\n\t};\r\n\r\n\r\n\t/********************************************************************/\r\n\t/** Exported                                                       **/\r\n\t/********************************************************************/\r\n\r\n\t/**\r\n\t * Performs a document query, returning the list of matches as a SelectionGroup.\r\n\t * If the first argument is undefined or null, an empty SelectionGroup is returned.\r\n\t * If the first argument is a SelectionGroup (created from this function), a copy of the SelectionGroup is returned.\r\n\t * If the first argument is a string, it is treated as a CSS selector, and the elements that match are in the SelectionGroup. \r\n\t * Anything else, and the SelectionGroup contains that object, or treats it like a group if it is an array.\r\n\t * @param {*} query the CSS/document query.\r\n\t * @param {boolean} one (optional) if true, and CSS selector, return only the first match.\r\n\t * @returns {SelectionGroup} the matching elements, encapsulated.\r\n\t */\r\n\tconst DOMJunk = new function() {\r\n\t\treturn function(query, one) {\r\n\t\t\tif (isUndefined(query) || isNull(query)) {\r\n\t\t\t\treturn new SelectionGroup([]);\r\n\t\t\t}\r\n\t\t\telse if (isArray(query) || query instanceof SelectionGroup) {\r\n\t\t\t\treturn new SelectionGroup([ ...query])\r\n\t\t\t}\r\n\t\t\telse if (isString(query)) {\r\n\t\t\t\treturn !!one \r\n\t\t\t\t\t? new SelectionGroup(document.querySelector(query))\r\n\t\t\t\t\t: new SelectionGroup(document.querySelectorAll(query))\r\n\t\t\t\t;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn new SelectionGroup(query)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t * The function's [this] keyword becomes each element.\r\n\t * When the function is called, it is called once per element, unless the function returns a value.\r\n\t * If the function returns a value (not undefined), it is returned as the result.\r\n\t * If it never returned a function, the SelectionGroup instance is returned as the result.\r\n\t * @param {string} name the name of the function to add to all query results.\r\n\t * @param {Function} func the function itself (cannot be a lambda closure).\r\n\t */\r\n\tDOMJunk.extend = function(name, func) {\r\n\t\tif (SelectionGroup.prototype[name]) {\r\n\t\t\tconsole.warn('DOMJunk: Overriding existing function: ' + name);\r\n\t\t}\r\n\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\tlet retval;\r\n\t\t\tfor (let i = 0; i < this.length && isUndefined(retval); i++) {\r\n\t\t\t\tretval = func.apply(this[i], arguments);\r\n\t\t\t}\r\n\t\t\treturn isUndefined(retval) ? this : retval;\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a wrapped function to the SelectionGroup prototype.\r\n\t * The function's [this] keyword becomes the SelectionGroup itself.\r\n\t * @param {string} name the name of the function to add.\r\n\t * @param {Function} func the function to add (cannot be a lambda closure).\r\n\t */\r\n\tDOMJunk.extendSelection = function(name, func) {\r\n\t\tif (SelectionGroup.prototype[name]) {\r\n\t\t\tconsole.warn('DOMJunk: Overriding existing function: ' + name);\r\n\t\t}\r\n\t\tSelectionGroup.prototype[name] = function() {\r\n\t\t\treturn func.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Auto-selects a series of selection groups using an object that maps\r\n\t * member name to selector query or function that returns a SelectionGroup.\r\n\t * @param {Object} memberSet a map of member name to selector.\r\n\t * \t\tIf the selector is a string, it is used as a selector to build the group.\r\n\t * \t\tElse if it's a function, it is called to return the member's value.\r\n\t * \t\tElse, it is the member's value.\r\n\t * @returns {Object} a new object that is a mapping of name to SelectionGroup.\r\n\t */\r\n\tDOMJunk.createGroups = function(memberSet) {\r\n\t\tconst out = {};\r\n\t\teach(memberSet, (selector, memberName) => {\r\n\t\t\tlet value = null;\r\n\t\t\tif (isString(selector)) {\r\n\t\t\t\tvalue = DOMJunk(selector);\r\n\t\t\t} else if (isFunction(selector)) {\r\n\t\t\t\tvalue = selector();\r\n\t\t\t} else {\r\n\t\t\t\tvalue = selector;\r\n\t\t\t}\r\n\r\n\t\t\tout[memberName] = value;\r\n\t\t});\r\n\t\treturn out;\r\n\t};\r\n\r\n\t/**\r\n\t * Creates one or more elements from a template element, applying a model to\r\n\t * it, and returning a generated element. The template content is assumed to have\r\n\t * \"handlebar\" tokens in them (\"{{tokenName}}\") that contain the name of the member to resolve\r\n\t * in the model.\r\n\t * @param {Element} templateElement the template element or a query containing\r\n\t * \t\ta template element to use as the template.\r\n\t * @param {Object | Array} model a model to use for filling the template.\r\n\t * \t\tIf model is an Array, multiple templates are made and returned.\r\n\t * @returns {Array} an array of generated elements.\r\n\t */\r\n\tDOMJunk.createTemplateElements = function(templateElement, model) {\r\n\t\tconst templateData = document.importNode(templateElement, true);\r\n\t\tconst templateContent = templateData.innerHTML.trim();\r\n\r\n\t\tconst _GENERATEELEMENT = (modelObject) => {\r\n\t\t\tconst matches = templateContent.match(/{{.+?}}/g);\r\n\t\t\tlet lastSearchIndex = 0;\r\n\t\t\tlet outHTML = '';\r\n\t\t\tif (matches) {\r\n\t\t\t\tfor (let i = 0; i < matches.length; i++) {\r\n\t\t\t\t\tconst token = matches[i]; // has handlebars\r\n\t\t\t\t\tlet matchIndex = templateContent.indexOf(token, lastSearchIndex);\r\n\t\t\t\t\tif (matchIndex >= 0) {\r\n\t\t\t\t\t\toutHTML += templateContent.substring(lastSearchIndex, matchIndex);\r\n\t\t\t\t\t\tconst expression = token.substring(2, token.length - 2);\r\n\t\t\t\t\t\tconst expressionChain = expression.split(\".\");\r\n\t\t\t\t\t\tlet result = modelObject;\r\n\t\t\t\t\t\tfor (let j = 0; j < expressionChain.length; j++) {\r\n\t\t\t\t\t\t\tresult = result[expressionChain[j]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!isUndefined(result)) {\r\n\t\t\t\t\t\t\toutHTML += isNull(result) ? '' : HTML_ESCAPE(result.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastSearchIndex = matchIndex + token.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\toutHTML += templateContent.substring(lastSearchIndex);\r\n\t\t\t}\r\n\r\n\t\t\treturn createHTML(outHTML);\r\n\t\t};\r\n\r\n\t\tconst generated = [];\r\n\t\tif (isArray(model)) {\r\n\t\t\teach(model, (m) => {\r\n\t\t\t\teach (_GENERATEELEMENT(m), (e) => {\r\n\t\t\t\t\tgenerated.push(e);\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\treturn generated;\r\n\t\t}\r\n\t\telse {\r\n\t\t\teach (_GENERATEELEMENT(model), (e) => {\r\n\t\t\t\tgenerated.push(e);\r\n\t\t\t})\r\n\t\t\treturn generated;\r\n\t\t}\r\n\t};\r\n\r\n\t\r\n\t/********************************************************************/\r\n\r\n\tDOMJunk.extend('each', $each);\r\n\tDOMJunk.extend('search', $search);\r\n\tDOMJunk.extend('child', $child);\r\n\tDOMJunk.extend('children', $children);\r\n\tDOMJunk.extend('parent', $parent);\r\n\tDOMJunk.extend('ancestors', $ancestors);\r\n\tDOMJunk.extend('descendants', $descendants);\r\n\tDOMJunk.extend('siblings', $siblings);\r\n\r\n\tDOMJunk.extend('clear', $clear);\r\n\tDOMJunk.extend('append', $append);\r\n\tDOMJunk.extend('refill', $refill);\r\n\tDOMJunk.extend('refillTemplate', $refillTemplate);\r\n\tDOMJunk.extend('refillList', $refillList);\r\n\tDOMJunk.extend('html', $html);\r\n\tDOMJunk.extend('text', $text);\r\n\r\n\tDOMJunk.extend('set', $set);\r\n\tDOMJunk.extend('merge', $merge);\r\n\r\n\tDOMJunk.extend('style', $style);\r\n\tDOMJunk.extend('attr', $attr);\r\n\tDOMJunk.extend('classAdd', $classAdd);\r\n\tDOMJunk.extend('classRemove', $classRemove);\r\n\tDOMJunk.extend('classToggle', $classToggle);\r\n\r\n\tDOMJunk.extend('attach', $attach);\r\n\tDOMJunk.extend('detach', $detach);\r\n\r\n\tDOMJunk.extendSelection('get', $get);\r\n\tDOMJunk.extendSelection('first', $first);\r\n\tDOMJunk.extendSelection('last', $last);\r\n\tDOMJunk.extendSelection('form', $form);\r\n\tDOMJunk.extendSelection('apply', $apply);\r\n\tDOMJunk.extendSelection('elements', $elements);\r\n\r\n\tconst wrapAttach = function(attachName) {\r\n\t\treturn function(func) { \r\n\t\t\tthis.attach(attachName, func); \r\n\t\t};\r\n\t}\r\n\r\n\tDOMJunk.extendSelection('load',     wrapAttach('load'));\r\n\tDOMJunk.extendSelection('unload',   wrapAttach('unload'));\r\n\tDOMJunk.extendSelection('click',    wrapAttach('click'));\r\n\tDOMJunk.extendSelection('dblclick', wrapAttach('dblclick'));\r\n\tDOMJunk.extendSelection('hover',    wrapAttach('mouseenter'));\r\n\tDOMJunk.extendSelection('leave',    wrapAttach('mouseleave'));\r\n\tDOMJunk.extendSelection('keydown',  wrapAttach('keydown'));\r\n\tDOMJunk.extendSelection('keyup',    wrapAttach('keyup'));\r\n\tDOMJunk.extendSelection('focus',    wrapAttach('focus'));\r\n\tDOMJunk.extendSelection('blur',     wrapAttach('blur'));\r\n\tDOMJunk.extendSelection('change',   wrapAttach('change'));\r\n\r\n\tDOMJunk.id =    $getById;\r\n\tDOMJunk.class = $getByClassName;\r\n\tDOMJunk.tag =   $getByTagName;\r\n\r\n\tDOMJunk.each = each;\r\n\tDOMJunk.fold = fold;\r\n\tDOMJunk.queryString = queryString;\r\n\r\n\tDOMJunk.isType = isType;\r\n\tDOMJunk.isUndefined = isUndefined;\r\n\tDOMJunk.isNull = isNull;\r\n\tDOMJunk.isBoolean = isBoolean;\r\n\tDOMJunk.isNumber = isNumber;\r\n\tDOMJunk.isString = isString;\r\n\tDOMJunk.isArray = isArray;\r\n\tDOMJunk.isFunction = isFunction;\r\n\tDOMJunk.isObject = isObject;\r\n\tDOMJunk.isBlank = isBlank;\r\n\tDOMJunk.html = createHTML;\r\n\tDOMJunk.e = createElement;\r\n\tDOMJunk.t = createText;\r\n\r\n\t/********************************************************************/\r\n\r\n\tlet old$DJAssignment     = CTX.$DJ;\r\n\tlet old$DJMainAssignment = CTX.$DJMain;\r\n\r\n\t/**\r\n\t * Restores the previous assigment of '$DJ' and '$DJMain' at load.\r\n\t */\r\n\tDOMJunk.noConflict = function() {\r\n\t\tCTX.$DJ     = old$DJAssignment;\r\n\t\tCTX.$DJMain = old$DJMainAssignment;\r\n\t};\r\n\t\r\n\tconst MAINFUNCS = [];\r\n\r\n\tCTX.DOMJunk = DOMJunk;\r\n\tCTX.$DJ     = DOMJunk;\r\n\tCTX.$DJMain = function(func) { \r\n\t\tMAINFUNCS.push(func);\r\n\t};\r\n\r\n\t/********************************************************************/\r\n\r\n\tdocument.addEventListener(\"DOMContentLoaded\", function(){\r\n\t\tfor (let i = 0; i < MAINFUNCS.length; i++)\r\n\t\t\tMAINFUNCS[i]();\r\n\t});\r\n\r\n\r\n\t/**\r\n\t TODO: Add stuff, maybe.\r\n\t\tFormValidate\r\n\t\tFormFill\r\n\t*/\r\n\r\n})(this);\r\n"],"names":["CTX","Element","console","error","document","querySelectorAll","querySelector","createElement","createTextNode","prototype","isBoolean","obj","isType","isFunction","isObject","isBlank","isUndefined","isNull","isArray","length","isNumber","isNaN","isString","trim","each","list","func","let","i","x","hasOwnProperty","fold","type","Object","toString","call","createHTML","html","outElement","innerHTML","content","childNodes","ENTITIES","&","<",">","\"","'","/","`","=","HTML_SPECIAL","HTML_ESCAPE","input","replace","m","SelectionGroup","Array","constructor","elements","forceOne","super","this","EVENTNAME","name","toLowerCase","DOMJunk","query","one","extend","warn","retval","apply","arguments","extendSelection","createGroups","memberSet","out","selector","memberName","value","createTemplateElements","templateElement","model","templateContent","importNode","_GENERATEELEMENT","matches","match","lastSearchIndex","outHTML","token","matchIndex","indexOf","substring","expressionChain","split","result","modelObject","j","generated","push","e","index","children","parentElement","elem","childQueue","child","pop","firstChild","removeChild","appendChild","NodeList","Document","DocumentFragment","clear","append","template","arr","generatorFunc","v","k","gen","data","text","innerText","memberMap","style","s","names","getAttributeNames","getAttribute","a","setAttribute","classNames","classes","className","classSet","map","c","join","remset","removeAttribute","argSet","eventName","self","event","callback","Error","formData","search","disabled","t","checked","selectorMap","wrapAttach","attachName","attach","id","getElementById","class","classname","getElementsByClassName","tag","tagname","namespace","getElementsByTagName","getElementsByTagNameNS","queryString","accum","key","encodeURIComponent","attribs","attrObj","createAttribute","setAttributeNode","old$DJAssignment","$DJ","old$DJMainAssignment","$DJMain","noConflict","MAINFUNCS","addEventListener"],"mappings":"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"}